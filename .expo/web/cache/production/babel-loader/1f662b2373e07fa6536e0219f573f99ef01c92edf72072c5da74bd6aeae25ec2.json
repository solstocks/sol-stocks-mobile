{"ast":null,"code":"'use client';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _canUseDom=_interopRequireDefault(require(\"../../modules/canUseDom\"));function isScreenReaderEnabled(){return new Promise(function(resolve,reject){resolve(true);});}var prefersReducedMotionMedia=_canUseDom.default&&typeof window.matchMedia==='function'?window.matchMedia('(prefers-reduced-motion: reduce)'):null;function isReduceMotionEnabled(){return new Promise(function(resolve,reject){resolve(prefersReducedMotionMedia?prefersReducedMotionMedia.matches:true);});}function addChangeListener(fn){if(prefersReducedMotionMedia!=null){prefersReducedMotionMedia.addEventListener!=null?prefersReducedMotionMedia.addEventListener('change',fn):prefersReducedMotionMedia.addListener(fn);}}function removeChangeListener(fn){if(prefersReducedMotionMedia!=null){prefersReducedMotionMedia.removeEventListener!=null?prefersReducedMotionMedia.removeEventListener('change',fn):prefersReducedMotionMedia.removeListener(fn);}}var handlers={};var AccessibilityInfo={isScreenReaderEnabled,isReduceMotionEnabled,fetch:isScreenReaderEnabled,addEventListener:function addEventListener(eventName,handler){if(eventName==='reduceMotionChanged'){if(!prefersReducedMotionMedia){return;}var listener=function(event){handler(event.matches);};addChangeListener(listener);handlers[handler]=listener;}return{remove:function(){return AccessibilityInfo.removeEventListener(eventName,handler);}};},setAccessibilityFocus:function setAccessibilityFocus(reactTag){},announceForAccessibility:function announceForAccessibility(announcement){},removeEventListener:function removeEventListener(eventName,handler){if(eventName==='reduceMotionChanged'){var listener=handlers[handler];if(!listener||!prefersReducedMotionMedia){return;}removeChangeListener(listener);}return;}};var _default=exports.default=AccessibilityInfo;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_canUseDom","isScreenReaderEnabled","Promise","resolve","reject","prefersReducedMotionMedia","canUseDOM","window","matchMedia","isReduceMotionEnabled","matches","addChangeListener","fn","addEventListener","addListener","removeChangeListener","removeEventListener","removeListener","handlers","AccessibilityInfo","fetch","eventName","handler","listener","event","remove","setAccessibilityFocus","reactTag","announceForAccessibility","announcement","_default"],"sources":["/Users/sarahfitzgerald/SolStocksMobile/node_modules/react-native-web/dist/exports/AccessibilityInfo/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use client';\n\nimport canUseDOM from '../../modules/canUseDom';\nfunction isScreenReaderEnabled() {\n  return new Promise((resolve, reject) => {\n    resolve(true);\n  });\n}\nvar prefersReducedMotionMedia = canUseDOM && typeof window.matchMedia === 'function' ? window.matchMedia('(prefers-reduced-motion: reduce)') : null;\nfunction isReduceMotionEnabled() {\n  return new Promise((resolve, reject) => {\n    resolve(prefersReducedMotionMedia ? prefersReducedMotionMedia.matches : true);\n  });\n}\nfunction addChangeListener(fn) {\n  if (prefersReducedMotionMedia != null) {\n    prefersReducedMotionMedia.addEventListener != null ? prefersReducedMotionMedia.addEventListener('change', fn) : prefersReducedMotionMedia.addListener(fn);\n  }\n}\nfunction removeChangeListener(fn) {\n  if (prefersReducedMotionMedia != null) {\n    prefersReducedMotionMedia.removeEventListener != null ? prefersReducedMotionMedia.removeEventListener('change', fn) : prefersReducedMotionMedia.removeListener(fn);\n  }\n}\nvar handlers = {};\nvar AccessibilityInfo = {\n  /**\n   * Query whether a screen reader is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\n   */\n  isScreenReaderEnabled,\n  /**\n   * Query whether the user prefers reduced motion.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\n   */\n  isReduceMotionEnabled,\n  /**\n   * Deprecated\n   */\n  fetch: isScreenReaderEnabled,\n  /**\n   * Add an event handler. Supported events: reduceMotionChanged\n   */\n  addEventListener: function addEventListener(eventName, handler) {\n    if (eventName === 'reduceMotionChanged') {\n      if (!prefersReducedMotionMedia) {\n        return;\n      }\n      var listener = event => {\n        handler(event.matches);\n      };\n      addChangeListener(listener);\n      handlers[handler] = listener;\n    }\n    return {\n      remove: () => AccessibilityInfo.removeEventListener(eventName, handler)\n    };\n  },\n  /**\n   * Set accessibility focus to a react component.\n   */\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\n  /**\n   * Post a string to be announced by the screen reader.\n   */\n  announceForAccessibility: function announceForAccessibility(announcement) {},\n  /**\n   * Remove an event handler.\n   */\n  removeEventListener: function removeEventListener(eventName, handler) {\n    if (eventName === 'reduceMotionChanged') {\n      var listener = handlers[handler];\n      if (!listener || !prefersReducedMotionMedia) {\n        return;\n      }\n      removeChangeListener(listener);\n    }\n    return;\n  }\n};\nexport default AccessibilityInfo;"],"mappings":"AASA,YAAY,CAAC,IAAAA,sBAAA,CAAAC,OAAA,iDAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,KAAA,QAAAD,OAAA,CAAAE,OAAA,QAEb,IAAAC,UAAA,CAAAP,sBAAA,CAAAC,OAAA,6BACA,QAAS,CAAAO,qBAAqBA,CAAA,CAAG,CAC/B,MAAO,IAAI,CAAAC,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCD,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAAC,CACJ,CACA,GAAI,CAAAE,yBAAyB,CAAGC,kBAAS,EAAI,MAAO,CAAAC,MAAM,CAACC,UAAU,GAAK,UAAU,CAAGD,MAAM,CAACC,UAAU,CAAC,kCAAkC,CAAC,CAAG,IAAI,CACnJ,QAAS,CAAAC,qBAAqBA,CAAA,CAAG,CAC/B,MAAO,IAAI,CAAAP,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CACtCD,OAAO,CAACE,yBAAyB,CAAGA,yBAAyB,CAACK,OAAO,CAAG,IAAI,CAAC,CAC/E,CAAC,CAAC,CACJ,CACA,QAAS,CAAAC,iBAAiBA,CAACC,EAAE,CAAE,CAC7B,GAAIP,yBAAyB,EAAI,IAAI,CAAE,CACrCA,yBAAyB,CAACQ,gBAAgB,EAAI,IAAI,CAAGR,yBAAyB,CAACQ,gBAAgB,CAAC,QAAQ,CAAED,EAAE,CAAC,CAAGP,yBAAyB,CAACS,WAAW,CAACF,EAAE,CAAC,CAC3J,CACF,CACA,QAAS,CAAAG,oBAAoBA,CAACH,EAAE,CAAE,CAChC,GAAIP,yBAAyB,EAAI,IAAI,CAAE,CACrCA,yBAAyB,CAACW,mBAAmB,EAAI,IAAI,CAAGX,yBAAyB,CAACW,mBAAmB,CAAC,QAAQ,CAAEJ,EAAE,CAAC,CAAGP,yBAAyB,CAACY,cAAc,CAACL,EAAE,CAAC,CACpK,CACF,CACA,GAAI,CAAAM,QAAQ,CAAG,CAAC,CAAC,CACjB,GAAI,CAAAC,iBAAiB,CAAG,CAOtBlB,qBAAqB,CAOrBQ,qBAAqB,CAIrBW,KAAK,CAAEnB,qBAAqB,CAI5BY,gBAAgB,CAAE,QAAS,CAAAA,gBAAgBA,CAACQ,SAAS,CAAEC,OAAO,CAAE,CAC9D,GAAID,SAAS,GAAK,qBAAqB,CAAE,CACvC,GAAI,CAAChB,yBAAyB,CAAE,CAC9B,OACF,CACA,GAAI,CAAAkB,QAAQ,CAAG,QAAAA,CAAAC,KAAK,CAAI,CACtBF,OAAO,CAACE,KAAK,CAACd,OAAO,CAAC,CACxB,CAAC,CACDC,iBAAiB,CAACY,QAAQ,CAAC,CAC3BL,QAAQ,CAACI,OAAO,CAAC,CAAGC,QAAQ,CAC9B,CACA,MAAO,CACLE,MAAM,CAAE,QAAAA,CAAA,QAAM,CAAAN,iBAAiB,CAACH,mBAAmB,CAACK,SAAS,CAAEC,OAAO,CAAC,EACzE,CAAC,CACH,CAAC,CAIDI,qBAAqB,CAAE,QAAS,CAAAA,qBAAqBA,CAACC,QAAQ,CAAE,CAAC,CAAC,CAIlEC,wBAAwB,CAAE,QAAS,CAAAA,wBAAwBA,CAACC,YAAY,CAAE,CAAC,CAAC,CAI5Eb,mBAAmB,CAAE,QAAS,CAAAA,mBAAmBA,CAACK,SAAS,CAAEC,OAAO,CAAE,CACpE,GAAID,SAAS,GAAK,qBAAqB,CAAE,CACvC,GAAI,CAAAE,QAAQ,CAAGL,QAAQ,CAACI,OAAO,CAAC,CAChC,GAAI,CAACC,QAAQ,EAAI,CAAClB,yBAAyB,CAAE,CAC3C,OACF,CACAU,oBAAoB,CAACQ,QAAQ,CAAC,CAChC,CACA,OACF,CACF,CAAC,CAAC,IAAAO,QAAA,CAAAjC,OAAA,CAAAE,OAAA,CACaoB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}