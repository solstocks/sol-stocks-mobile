{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=mergeRefs;var React=_interopRequireWildcard(require(\"react\"));function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}function mergeRefs(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return function forwardRef(node){args.forEach(function(ref){if(ref==null){return;}if(typeof ref==='function'){ref(node);return;}if(typeof ref==='object'){ref.current=node;return;}console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \"+String(ref));});};}","map":{"version":3,"names":["React","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","mergeRefs","_len","arguments","length","args","Array","_key","forwardRef","node","forEach","ref","current","console","error","String"],"sources":["/Users/sarahfitzgerald/SolStocksMobile/node_modules/react-native-web/dist/modules/mergeRefs/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport * as React from 'react';\nexport default function mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return function forwardRef(node) {\n    args.forEach(ref => {\n      if (ref == null) {\n        return;\n      }\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}"],"mappings":"mFASA,IAAAA,KAAA,CAAAC,uBAAA,CAAAC,OAAA,WAA+B,SAAAD,wBAAAE,CAAA,CAAAC,CAAA,wBAAAC,OAAA,KAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAJ,uBAAA,SAAAA,CAAAE,CAAA,CAAAC,CAAA,MAAAA,CAAA,EAAAD,CAAA,EAAAA,CAAA,CAAAK,UAAA,QAAAL,CAAA,KAAAM,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAAAC,SAAA,MAAAC,OAAA,CAAAV,CAAA,YAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAQ,CAAA,IAAAF,CAAA,CAAAL,CAAA,CAAAG,CAAA,CAAAD,CAAA,KAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,SAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,EAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,CAAAQ,CAAA,WAAAM,EAAA,IAAAd,CAAA,aAAAc,EAAA,KAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,CAAAc,EAAA,KAAAP,CAAA,EAAAD,CAAA,CAAAW,MAAA,CAAAC,cAAA,GAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,CAAAc,EAAA,KAAAP,CAAA,CAAAK,GAAA,EAAAL,CAAA,CAAAM,GAAA,EAAAP,CAAA,CAAAE,CAAA,CAAAM,EAAA,CAAAP,CAAA,EAAAC,CAAA,CAAAM,EAAA,EAAAd,CAAA,CAAAc,EAAA,UAAAN,CAAA,IAAAR,CAAA,CAAAC,CAAA,GAChB,QAAS,CAAAmB,SAASA,CAAA,CAAG,CAClC,IAAK,GAAI,CAAAC,IAAI,CAAGC,SAAS,CAACC,MAAM,CAAEC,IAAI,CAAG,GAAI,CAAAC,KAAK,CAACJ,IAAI,CAAC,CAAEK,IAAI,CAAG,CAAC,CAAEA,IAAI,CAAGL,IAAI,CAAEK,IAAI,EAAE,CAAE,CACvFF,IAAI,CAACE,IAAI,CAAC,CAAGJ,SAAS,CAACI,IAAI,CAAC,CAC9B,CACA,MAAO,SAAS,CAAAC,UAAUA,CAACC,IAAI,CAAE,CAC/BJ,IAAI,CAACK,OAAO,CAAC,SAAAC,GAAG,CAAI,CAClB,GAAIA,GAAG,EAAI,IAAI,CAAE,CACf,OACF,CACA,GAAI,MAAO,CAAAA,GAAG,GAAK,UAAU,CAAE,CAC7BA,GAAG,CAACF,IAAI,CAAC,CACT,OACF,CACA,GAAI,MAAO,CAAAE,GAAG,GAAK,QAAQ,CAAE,CAC3BA,GAAG,CAACC,OAAO,CAAGH,IAAI,CAClB,OACF,CACAI,OAAO,CAACC,KAAK,CAAC,+EAA+E,CAAGC,MAAM,CAACJ,GAAG,CAAC,CAAC,CAC9G,CAAC,CAAC,CACJ,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}