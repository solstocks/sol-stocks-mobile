{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.MobilePortfolio=void 0;var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _mobileWalletAdapter=require(\"../utils/mobileWalletAdapter\");var _solanaPayIntegration=require(\"../utils/solanaPayIntegration\");var _jsxRuntime=require(\"react/jsx-runtime\");var _this=this,_jsxFileName=\"/Users/sarahfitzgerald/SolStocksMobile/src/components/MobilePortfolio.tsx\";function _interopRequireWildcard(e,t){if(\"function\"==typeof WeakMap)var r=new WeakMap(),n=new WeakMap();return(_interopRequireWildcard=function(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f);}for(var _t in e)\"default\"!==_t&&{}.hasOwnProperty.call(e,_t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,_t))&&(i.get||i.set)?o(f,_t,i):f[_t]=e[_t]);return f;})(e,t);}var _Dimensions$get=_reactNative.Dimensions.get('window'),width=_Dimensions$get.width;var MobilePortfolio=function(){var _useState=(0,_react.useState)(null),_useState2=(0,_slicedToArray2.default)(_useState,2),connectedWallet=_useState2[0],setConnectedWallet=_useState2[1];var _useState3=(0,_react.useState)([]),_useState4=(0,_slicedToArray2.default)(_useState3,2),holdings=_useState4[0],setHoldings=_useState4[1];var _useState5=(0,_react.useState)({totalValue:0,totalInvested:0,totalPL:0,totalPLPercent:0,solBalance:0,dayChange:0,dayChangePercent:0}),_useState6=(0,_slicedToArray2.default)(_useState5,2),summary=_useState6[0],setSummary=_useState6[1];var _useState7=(0,_react.useState)(false),_useState8=(0,_slicedToArray2.default)(_useState7,2),refreshing=_useState8[0],setRefreshing=_useState8[1];var _useState9=(0,_react.useState)(true),_useState0=(0,_slicedToArray2.default)(_useState9,2),isLoading=_useState0[0],setIsLoading=_useState0[1];(0,_react.useEffect)(function(){checkWalletConnection();},[]);(0,_react.useEffect)(function(){if(connectedWallet){loadPortfolioData();}},[connectedWallet]);var checkWalletConnection=function(){var _ref=(0,_asyncToGenerator2.default)(function*(){try{var publicKey=_mobileWalletAdapter.mobileWalletService.getPublicKey();setConnectedWallet(publicKey);}catch(error){console.error('Failed to check wallet connection:',error);}});return function checkWalletConnection(){return _ref.apply(this,arguments);};}();var connectWallet=function(){var _ref2=(0,_asyncToGenerator2.default)(function*(){try{var publicKey=yield _mobileWalletAdapter.mobileWalletService.connect();if(publicKey){setConnectedWallet(publicKey);_reactNative.Alert.alert('Success',`Wallet connected: ${publicKey.toBase58().substring(0,8)}...`);}}catch(error){console.error('Wallet connection failed:',error);_reactNative.Alert.alert('Error','Failed to connect wallet');}});return function connectWallet(){return _ref2.apply(this,arguments);};}();var loadPortfolioData=function(){var _ref3=(0,_asyncToGenerator2.default)(function*(){if(!connectedWallet)return;setIsLoading(true);try{var paymentHistory=yield _solanaPayIntegration.solanaPayService.getPaymentHistory();var confirmedPurchases=paymentHistory.filter(function(p){return p.status==='confirmed';});var holdingsMap=new Map();confirmedPurchases.forEach(function(purchase){if(holdingsMap.has(purchase.stockSymbol)){var existing=holdingsMap.get(purchase.stockSymbol);existing.quantity+=purchase.quantity;existing.totalInvested+=purchase.totalUSD;}else{holdingsMap.set(purchase.stockSymbol,{symbol:purchase.stockSymbol,quantity:purchase.quantity,totalInvested:purchase.totalUSD,category:purchase.category});}});var holdingsArray=Array.from(holdingsMap.values()).map(function(holding){var currentPrice=getCurrentStockPrice(holding.symbol);var avgPrice=holding.totalInvested/holding.quantity;var totalValue=currentPrice*holding.quantity;var unrealizedPL=totalValue-holding.totalInvested;var unrealizedPLPercent=unrealizedPL/holding.totalInvested*100;return{symbol:holding.symbol,name:getStockName(holding.symbol),quantity:holding.quantity,avgPrice,currentPrice,totalValue,unrealizedPL,unrealizedPLPercent,category:holding.category};});setHoldings(holdingsArray);var totalValue=holdingsArray.reduce(function(sum,holding){return sum+holding.totalValue;},0);var totalInvested=holdingsArray.reduce(function(sum,holding){return sum+holding.avgPrice*holding.quantity;},0);var totalPL=totalValue-totalInvested;var totalPLPercent=totalInvested>0?totalPL/totalInvested*100:0;var solBalance=yield _mobileWalletAdapter.mobileWalletService.getBalance();var dayChange=totalValue*(Math.random()*0.06-0.03);var dayChangePercent=totalValue>0?dayChange/totalValue*100:0;setSummary({totalValue,totalInvested,totalPL,totalPLPercent,solBalance,dayChange,dayChangePercent});}catch(error){console.error('Failed to load portfolio data:',error);_reactNative.Alert.alert('Error','Failed to load portfolio data');}finally{setIsLoading(false);}});return function loadPortfolioData(){return _ref3.apply(this,arguments);};}();var getCurrentStockPrice=function(symbol){var prices={'AAPL':178.72,'GOOGL':138.21,'MSFT':378.85,'TSLA':248.50,'AMZN':155.89,'COIN':245.67,'MSTR':387.45,'RIOT':12.85,'MARA':19.67,'HOOD':23.45,'VANA':45.32,'CIRCLE':125.00,'GEMINI':89.50,'KRAKEN':156.78,'OPENSEA':67.34};return prices[symbol]||100;};var getStockName=function(symbol){var names={'AAPL':'Apple Inc.','GOOGL':'Alphabet Inc.','MSFT':'Microsoft Corp.','TSLA':'Tesla Inc.','AMZN':'Amazon.com Inc.','COIN':'Coinbase Global','MSTR':'MicroStrategy Inc.','RIOT':'Riot Platforms','MARA':'Marathon Digital','HOOD':'Robinhood Markets','VANA':'Vanna Holdings','CIRCLE':'Circle Internet Financial','GEMINI':'Gemini Trust Company','KRAKEN':'Kraken Digital Asset Exchange','OPENSEA':'OpenSea Technologies'};return names[symbol]||symbol;};var handleSellStock=function(){var _ref4=(0,_asyncToGenerator2.default)(function*(holding){_reactNative.Alert.prompt('Sell Stock',`How many shares of ${holding.symbol} would you like to sell?\\nYou own ${holding.quantity} shares`,[{text:'Cancel',style:'cancel'},{text:'Sell',onPress:function(){var _ref5=(0,_asyncToGenerator2.default)(function*(quantity){if(quantity&&!isNaN(Number(quantity))){var sellQuantity=Number(quantity);if(sellQuantity>holding.quantity){_reactNative.Alert.alert('Error','You cannot sell more shares than you own');return;}yield processSell(holding,sellQuantity);}});return function onPress(_x2){return _ref5.apply(this,arguments);};}()}],'plain-text',Math.min(holding.quantity,1).toString());});return function handleSellStock(_x){return _ref4.apply(this,arguments);};}();var processSell=function(){var _ref6=(0,_asyncToGenerator2.default)(function*(holding,quantity){try{if(!connectedWallet)return;var sellValue=holding.currentPrice*quantity;var _solanaPayService$cal=_solanaPayIntegration.solanaPayService.calculateTradingFee(holding.symbol,sellValue/200,'sell'),feeSOL=_solanaPayService$cal.feeSOL;var netSOL=sellValue/200-feeSOL;_reactNative.Alert.alert('Confirm Sale',`Sell ${quantity} shares of ${holding.symbol}\\n\\n`+`Sale Value: $${sellValue.toFixed(2)}\\n`+`You'll receive: ${netSOL.toFixed(4)} SOL\\n`+`Trading Fee: ${feeSOL.toFixed(4)} SOL`,[{text:'Cancel',style:'cancel'},{text:'Confirm Sale',onPress:function(){return executeSell(holding,quantity,netSOL);}}]);}catch(error){console.error('Sell processing failed:',error);_reactNative.Alert.alert('Error','Failed to process sale');}});return function processSell(_x3,_x4){return _ref6.apply(this,arguments);};}();var executeSell=function(){var _ref7=(0,_asyncToGenerator2.default)(function*(holding,quantity,netSOL){try{_reactNative.Alert.alert('Sale Successful!',`Sold ${quantity} shares of ${holding.symbol}\\n`+`Received: ${netSOL.toFixed(4)} SOL`,[{text:'OK',onPress:function(){return onRefresh();}}]);}catch(error){console.error('Sell execution failed:',error);_reactNative.Alert.alert('Error','Failed to execute sale');}});return function executeSell(_x5,_x6,_x7){return _ref7.apply(this,arguments);};}();var onRefresh=function(){var _ref8=(0,_asyncToGenerator2.default)(function*(){setRefreshing(true);yield loadPortfolioData();setRefreshing(false);});return function onRefresh(){return _ref8.apply(this,arguments);};}();var renderPortfolioSummary=function(){return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.summaryContainer,children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.summaryHeader,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.summaryTitle,children:\"Portfolio Value\"}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.totalValue,children:[\"$\",summary.totalValue.toFixed(2)]}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.dayChange,children:[(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:[styles.dayChangeText,summary.dayChange>=0?styles.positive:styles.negative],children:[summary.dayChange>=0?'+':'',\"$\",Math.abs(summary.dayChange).toFixed(2),\" (\",summary.dayChangePercent>=0?'+':'',summary.dayChangePercent.toFixed(2),\"%)\"]}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.dayChangeLabel,children:\"Today\"})]})]}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.summaryStats,children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.statItem,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.statLabel,children:\"Total P&L\"}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:[styles.statValue,summary.totalPL>=0?styles.positive:styles.negative],children:[summary.totalPL>=0?'+':'',\"$\",summary.totalPL.toFixed(2)]}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:[styles.statPercent,summary.totalPL>=0?styles.positive:styles.negative],children:[\"(\",summary.totalPLPercent>=0?'+':'',summary.totalPLPercent.toFixed(2),\"%)\"]})]}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.statItem,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.statLabel,children:\"SOL Balance\"}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.statValue,children:[summary.solBalance.toFixed(4),\" SOL\"]}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.statPercent,children:[\"$\",(summary.solBalance*200).toFixed(2)]})]})]})]});};var renderHolding=function(holding){return(0,_jsxRuntime.jsxs)(_reactNative.TouchableOpacity,{style:styles.holdingItem,onPress:function(){return handleSellStock(holding);},children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.holdingHeader,children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.holdingSymbol,children:holding.symbol}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.holdingName,children:holding.name})]}),(0,_jsxRuntime.jsx)(_reactNative.View,{style:[styles.categoryBadge,styles[`${holding.category}Badge`]],children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.categoryText,children:holding.category.toUpperCase()})})]}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.holdingDetails,children:[(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.holdingRow,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.holdingLabel,children:\"Quantity\"}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.holdingValue,children:[holding.quantity,\" shares\"]})]}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.holdingRow,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.holdingLabel,children:\"Avg Price\"}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.holdingValue,children:[\"$\",holding.avgPrice.toFixed(2)]})]}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.holdingRow,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.holdingLabel,children:\"Current Price\"}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.holdingValue,children:[\"$\",holding.currentPrice.toFixed(2)]})]}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.holdingRow,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.holdingLabel,children:\"Total Value\"}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.holdingValue,children:[\"$\",holding.totalValue.toFixed(2)]})]}),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.holdingRow,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.holdingLabel,children:\"Unrealized P&L\"}),(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:[styles.holdingValue,holding.unrealizedPL>=0?styles.positive:styles.negative],children:[holding.unrealizedPL>=0?'+':'',\"$\",holding.unrealizedPL.toFixed(2),\" (\",holding.unrealizedPLPercent>=0?'+':'',holding.unrealizedPLPercent.toFixed(2),\"%)\"]})]})]})]},holding.symbol);};if(!connectedWallet){return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.notConnectedContainer,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.notConnectedTitle,children:\"Connect Your Wallet\"}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.notConnectedText,children:\"Connect your Solana wallet to view your portfolio\"}),(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{style:styles.connectButton,onPress:connectWallet,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.connectButtonText,children:\"Connect Wallet\"})})]});}return(0,_jsxRuntime.jsxs)(_reactNative.ScrollView,{style:styles.container,refreshControl:(0,_jsxRuntime.jsx)(_reactNative.RefreshControl,{refreshing:refreshing,onRefresh:onRefresh}),children:[renderPortfolioSummary(),(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.holdingsContainer,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.holdingsTitle,children:\"Your Holdings\"}),holdings.length===0?(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.noHoldingsContainer,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.noHoldingsText,children:\"No holdings yet\"}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.noHoldingsSubtext,children:\"Start trading to build your portfolio\"})]}):holdings.map(renderHolding)]})]});};exports.MobilePortfolio=MobilePortfolio;var styles=_reactNative.StyleSheet.create({container:{flex:1,backgroundColor:'#f8f9fa'},notConnectedContainer:{flex:1,justifyContent:'center',alignItems:'center',padding:32,backgroundColor:'#f8f9fa'},notConnectedTitle:{fontSize:24,fontWeight:'bold',color:'#333',marginBottom:16},notConnectedText:{fontSize:16,color:'#666',textAlign:'center',marginBottom:32},connectButton:{backgroundColor:'#9945FF',paddingHorizontal:32,paddingVertical:16,borderRadius:12},connectButtonText:{color:'#fff',fontSize:18,fontWeight:'600'},summaryContainer:{backgroundColor:'#fff',margin:16,borderRadius:16,padding:24,shadowColor:'#000',shadowOffset:{width:0,height:2},shadowOpacity:0.1,shadowRadius:8,elevation:4},summaryHeader:{alignItems:'center',marginBottom:20},summaryTitle:{fontSize:16,color:'#666',marginBottom:8},totalValue:{fontSize:36,fontWeight:'bold',color:'#333',marginBottom:8},dayChange:{alignItems:'center'},dayChangeText:{fontSize:16,fontWeight:'600'},dayChangeLabel:{fontSize:12,color:'#999',marginTop:2},summaryStats:{flexDirection:'row',justifyContent:'space-around',paddingTop:20,borderTopWidth:1,borderTopColor:'#f0f0f0'},statItem:{alignItems:'center'},statLabel:{fontSize:12,color:'#666',marginBottom:4},statValue:{fontSize:16,fontWeight:'600',color:'#333'},statPercent:{fontSize:12,marginTop:2},positive:{color:'#4caf50'},negative:{color:'#f44336'},holdingsContainer:{padding:16},holdingsTitle:{fontSize:20,fontWeight:'bold',color:'#333',marginBottom:16},noHoldingsContainer:{alignItems:'center',paddingVertical:40},noHoldingsText:{fontSize:18,color:'#666',marginBottom:8},noHoldingsSubtext:{fontSize:14,color:'#999'},holdingItem:{backgroundColor:'#fff',borderRadius:12,padding:16,marginBottom:12,shadowColor:'#000',shadowOffset:{width:0,height:2},shadowOpacity:0.1,shadowRadius:4,elevation:2},holdingHeader:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',marginBottom:12},holdingSymbol:{fontSize:18,fontWeight:'bold',color:'#333'},holdingName:{fontSize:14,color:'#666'},categoryBadge:{paddingHorizontal:8,paddingVertical:4,borderRadius:12},traditionalBadge:{backgroundColor:'#e3f2fd'},cryptoBadge:{backgroundColor:'#f3e5f5'},premiumBadge:{backgroundColor:'#fff3e0'},categoryText:{fontSize:10,fontWeight:'600',color:'#666'},holdingDetails:{gap:8},holdingRow:{flexDirection:'row',justifyContent:'space-between',alignItems:'center'},holdingLabel:{fontSize:14,color:'#666'},holdingValue:{fontSize:14,fontWeight:'500',color:'#333'}});","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_mobileWalletAdapter","_solanaPayIntegration","_jsxRuntime","_this","_jsxFileName","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_Dimensions$get","Dimensions","width","MobilePortfolio","_useState","useState","_useState2","_slicedToArray2","connectedWallet","setConnectedWallet","_useState3","_useState4","holdings","setHoldings","_useState5","totalValue","totalInvested","totalPL","totalPLPercent","solBalance","dayChange","dayChangePercent","_useState6","summary","setSummary","_useState7","_useState8","refreshing","setRefreshing","_useState9","_useState0","isLoading","setIsLoading","useEffect","checkWalletConnection","loadPortfolioData","_ref","_asyncToGenerator2","publicKey","mobileWalletService","getPublicKey","error","console","apply","arguments","connectWallet","_ref2","connect","Alert","alert","toBase58","substring","_ref3","paymentHistory","solanaPayService","getPaymentHistory","confirmedPurchases","filter","p","status","holdingsMap","Map","forEach","purchase","stockSymbol","existing","quantity","totalUSD","symbol","category","holdingsArray","Array","from","values","map","holding","currentPrice","getCurrentStockPrice","avgPrice","unrealizedPL","unrealizedPLPercent","name","getStockName","reduce","sum","getBalance","Math","random","prices","names","handleSellStock","_ref4","prompt","text","style","onPress","_ref5","isNaN","Number","sellQuantity","processSell","_x2","min","toString","_x","_ref6","sellValue","_solanaPayService$cal","calculateTradingFee","feeSOL","netSOL","toFixed","executeSell","_x3","_x4","_ref7","onRefresh","_x5","_x6","_x7","_ref8","renderPortfolioSummary","jsxs","View","styles","summaryContainer","children","summaryHeader","jsx","Text","summaryTitle","dayChangeText","positive","negative","abs","dayChangeLabel","summaryStats","statItem","statLabel","statValue","statPercent","renderHolding","TouchableOpacity","holdingItem","holdingHeader","holdingSymbol","holdingName","categoryBadge","categoryText","toUpperCase","holdingDetails","holdingRow","holdingLabel","holdingValue","notConnectedContainer","notConnectedTitle","notConnectedText","connectButton","connectButtonText","ScrollView","container","refreshControl","RefreshControl","holdingsContainer","holdingsTitle","length","noHoldingsContainer","noHoldingsText","noHoldingsSubtext","exports","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","padding","fontSize","fontWeight","color","marginBottom","textAlign","paddingHorizontal","paddingVertical","borderRadius","margin","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginTop","flexDirection","paddingTop","borderTopWidth","borderTopColor","traditionalBadge","cryptoBadge","premiumBadge","gap"],"sources":["/Users/sarahfitzgerald/SolStocksMobile/src/components/MobilePortfolio.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  RefreshControl,\n  Dimensions,\n} from 'react-native';\nimport { PublicKey } from '@solana/web3.js';\nimport { mobileWalletService } from '../utils/mobileWalletAdapter';\nimport { solanaPayService } from '../utils/solanaPayIntegration';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst { width } = Dimensions.get('window');\n\ninterface PortfolioHolding {\n  symbol: string;\n  name: string;\n  quantity: number;\n  avgPrice: number;\n  currentPrice: number;\n  totalValue: number;\n  unrealizedPL: number;\n  unrealizedPLPercent: number;\n  category: 'traditional' | 'crypto' | 'premium';\n}\n\ninterface PortfolioSummary {\n  totalValue: number;\n  totalInvested: number;\n  totalPL: number;\n  totalPLPercent: number;\n  solBalance: number;\n  dayChange: number;\n  dayChangePercent: number;\n}\n\nexport const MobilePortfolio: React.FC = () => {\n  const [connectedWallet, setConnectedWallet] = useState<PublicKey | null>(null);\n  const [holdings, setHoldings] = useState<PortfolioHolding[]>([]);\n  const [summary, setSummary] = useState<PortfolioSummary>({\n    totalValue: 0,\n    totalInvested: 0,\n    totalPL: 0,\n    totalPLPercent: 0,\n    solBalance: 0,\n    dayChange: 0,\n    dayChangePercent: 0,\n  });\n  const [refreshing, setRefreshing] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    checkWalletConnection();\n  }, []);\n\n  useEffect(() => {\n    if (connectedWallet) {\n      loadPortfolioData();\n    }\n  }, [connectedWallet]);\n\n  const checkWalletConnection = async () => {\n    try {\n      const publicKey = mobileWalletService.getPublicKey();\n      setConnectedWallet(publicKey);\n    } catch (error) {\n      console.error('Failed to check wallet connection:', error);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const publicKey = await mobileWalletService.connect();\n      if (publicKey) {\n        setConnectedWallet(publicKey);\n        Alert.alert('Success', `Wallet connected: ${publicKey.toBase58().substring(0, 8)}...`);\n      }\n    } catch (error) {\n      console.error('Wallet connection failed:', error);\n      Alert.alert('Error', 'Failed to connect wallet');\n    }\n  };\n\n  const loadPortfolioData = async () => {\n    if (!connectedWallet) return;\n\n    setIsLoading(true);\n    try {\n      // Load user's transaction history and calculate holdings\n      const paymentHistory = await solanaPayService.getPaymentHistory();\n      const confirmedPurchases = paymentHistory.filter(p => p.status === 'confirmed');\n      \n      // Group purchases by stock symbol\n      const holdingsMap = new Map<string, any>();\n      \n      confirmedPurchases.forEach(purchase => {\n        if (holdingsMap.has(purchase.stockSymbol)) {\n          const existing = holdingsMap.get(purchase.stockSymbol);\n          existing.quantity += purchase.quantity;\n          existing.totalInvested += purchase.totalUSD;\n        } else {\n          holdingsMap.set(purchase.stockSymbol, {\n            symbol: purchase.stockSymbol,\n            quantity: purchase.quantity,\n            totalInvested: purchase.totalUSD,\n            category: purchase.category,\n          });\n        }\n      });\n\n      // Convert to holdings array with current prices\n      const holdingsArray: PortfolioHolding[] = Array.from(holdingsMap.values()).map(holding => {\n        const currentPrice = getCurrentStockPrice(holding.symbol);\n        const avgPrice = holding.totalInvested / holding.quantity;\n        const totalValue = currentPrice * holding.quantity;\n        const unrealizedPL = totalValue - holding.totalInvested;\n        const unrealizedPLPercent = (unrealizedPL / holding.totalInvested) * 100;\n\n        return {\n          symbol: holding.symbol,\n          name: getStockName(holding.symbol),\n          quantity: holding.quantity,\n          avgPrice,\n          currentPrice,\n          totalValue,\n          unrealizedPL,\n          unrealizedPLPercent,\n          category: holding.category,\n        };\n      });\n\n      setHoldings(holdingsArray);\n\n      // Calculate portfolio summary\n      const totalValue = holdingsArray.reduce((sum, holding) => sum + holding.totalValue, 0);\n      const totalInvested = holdingsArray.reduce((sum, holding) => sum + (holding.avgPrice * holding.quantity), 0);\n      const totalPL = totalValue - totalInvested;\n      const totalPLPercent = totalInvested > 0 ? (totalPL / totalInvested) * 100 : 0;\n      \n      // Get SOL balance\n      const solBalance = await mobileWalletService.getBalance();\n      \n      // Mock day change (in production, this would be calculated from historical data)\n      const dayChange = totalValue * (Math.random() * 0.06 - 0.03); // Random ±3%\n      const dayChangePercent = totalValue > 0 ? (dayChange / totalValue) * 100 : 0;\n\n      setSummary({\n        totalValue,\n        totalInvested,\n        totalPL,\n        totalPLPercent,\n        solBalance,\n        dayChange,\n        dayChangePercent,\n      });\n\n    } catch (error) {\n      console.error('Failed to load portfolio data:', error);\n      Alert.alert('Error', 'Failed to load portfolio data');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getCurrentStockPrice = (symbol: string): number => {\n    // Mock current prices (in production, this would come from an API)\n    const prices: { [key: string]: number } = {\n      'AAPL': 178.72,\n      'GOOGL': 138.21,\n      'MSFT': 378.85,\n      'TSLA': 248.50,\n      'AMZN': 155.89,\n      'COIN': 245.67,\n      'MSTR': 387.45,\n      'RIOT': 12.85,\n      'MARA': 19.67,\n      'HOOD': 23.45,\n      'VANA': 45.32,\n      'CIRCLE': 125.00,\n      'GEMINI': 89.50,\n      'KRAKEN': 156.78,\n      'OPENSEA': 67.34,\n    };\n    return prices[symbol] || 100;\n  };\n\n  const getStockName = (symbol: string): string => {\n    const names: { [key: string]: string } = {\n      'AAPL': 'Apple Inc.',\n      'GOOGL': 'Alphabet Inc.',\n      'MSFT': 'Microsoft Corp.',\n      'TSLA': 'Tesla Inc.',\n      'AMZN': 'Amazon.com Inc.',\n      'COIN': 'Coinbase Global',\n      'MSTR': 'MicroStrategy Inc.',\n      'RIOT': 'Riot Platforms',\n      'MARA': 'Marathon Digital',\n      'HOOD': 'Robinhood Markets',\n      'VANA': 'Vanna Holdings',\n      'CIRCLE': 'Circle Internet Financial',\n      'GEMINI': 'Gemini Trust Company',\n      'KRAKEN': 'Kraken Digital Asset Exchange',\n      'OPENSEA': 'OpenSea Technologies',\n    };\n    return names[symbol] || symbol;\n  };\n\n  const handleSellStock = async (holding: PortfolioHolding) => {\n    Alert.prompt(\n      'Sell Stock',\n      `How many shares of ${holding.symbol} would you like to sell?\\nYou own ${holding.quantity} shares`,\n      [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'Sell',\n          onPress: async (quantity) => {\n            if (quantity && !isNaN(Number(quantity))) {\n              const sellQuantity = Number(quantity);\n              if (sellQuantity > holding.quantity) {\n                Alert.alert('Error', 'You cannot sell more shares than you own');\n                return;\n              }\n              await processSell(holding, sellQuantity);\n            }\n          },\n        },\n      ],\n      'plain-text',\n      Math.min(holding.quantity, 1).toString()\n    );\n  };\n\n  const processSell = async (holding: PortfolioHolding, quantity: number) => {\n    try {\n      if (!connectedWallet) return;\n\n      const sellValue = holding.currentPrice * quantity;\n      const { feeSOL } = solanaPayService.calculateTradingFee(holding.symbol, sellValue / 200, 'sell'); // Assuming $200 SOL\n      const netSOL = (sellValue / 200) - feeSOL;\n\n      Alert.alert(\n        'Confirm Sale',\n        `Sell ${quantity} shares of ${holding.symbol}\\n\\n` +\n        `Sale Value: $${sellValue.toFixed(2)}\\n` +\n        `You'll receive: ${netSOL.toFixed(4)} SOL\\n` +\n        `Trading Fee: ${feeSOL.toFixed(4)} SOL`,\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { text: 'Confirm Sale', onPress: () => executeSell(holding, quantity, netSOL) },\n        ]\n      );\n    } catch (error) {\n      console.error('Sell processing failed:', error);\n      Alert.alert('Error', 'Failed to process sale');\n    }\n  };\n\n  const executeSell = async (holding: PortfolioHolding, quantity: number, netSOL: number) => {\n    try {\n      // In a real implementation, this would create a sell transaction\n      // For now, we'll simulate the sale by updating local storage\n      \n      Alert.alert(\n        'Sale Successful!',\n        `Sold ${quantity} shares of ${holding.symbol}\\n` +\n        `Received: ${netSOL.toFixed(4)} SOL`,\n        [{ text: 'OK', onPress: () => onRefresh() }]\n      );\n    } catch (error) {\n      console.error('Sell execution failed:', error);\n      Alert.alert('Error', 'Failed to execute sale');\n    }\n  };\n\n  const onRefresh = async () => {\n    setRefreshing(true);\n    await loadPortfolioData();\n    setRefreshing(false);\n  };\n\n  const renderPortfolioSummary = () => (\n    <View style={styles.summaryContainer}>\n      <View style={styles.summaryHeader}>\n        <Text style={styles.summaryTitle}>Portfolio Value</Text>\n        <Text style={styles.totalValue}>${summary.totalValue.toFixed(2)}</Text>\n        <View style={styles.dayChange}>\n          <Text style={[styles.dayChangeText, summary.dayChange >= 0 ? styles.positive : styles.negative]}>\n            {summary.dayChange >= 0 ? '+' : ''}${Math.abs(summary.dayChange).toFixed(2)} (\n            {summary.dayChangePercent >= 0 ? '+' : ''}{summary.dayChangePercent.toFixed(2)}%)\n          </Text>\n          <Text style={styles.dayChangeLabel}>Today</Text>\n        </View>\n      </View>\n\n      <View style={styles.summaryStats}>\n        <View style={styles.statItem}>\n          <Text style={styles.statLabel}>Total P&L</Text>\n          <Text style={[styles.statValue, summary.totalPL >= 0 ? styles.positive : styles.negative]}>\n            {summary.totalPL >= 0 ? '+' : ''}${summary.totalPL.toFixed(2)}\n          </Text>\n          <Text style={[styles.statPercent, summary.totalPL >= 0 ? styles.positive : styles.negative]}>\n            ({summary.totalPLPercent >= 0 ? '+' : ''}{summary.totalPLPercent.toFixed(2)}%)\n          </Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statLabel}>SOL Balance</Text>\n          <Text style={styles.statValue}>{summary.solBalance.toFixed(4)} SOL</Text>\n          <Text style={styles.statPercent}>${(summary.solBalance * 200).toFixed(2)}</Text>\n        </View>\n      </View>\n    </View>\n  );\n\n  const renderHolding = (holding: PortfolioHolding) => (\n    <TouchableOpacity\n      key={holding.symbol}\n      style={styles.holdingItem}\n      onPress={() => handleSellStock(holding)}\n    >\n      <View style={styles.holdingHeader}>\n        <View>\n          <Text style={styles.holdingSymbol}>{holding.symbol}</Text>\n          <Text style={styles.holdingName}>{holding.name}</Text>\n        </View>\n        <View style={[styles.categoryBadge, styles[`${holding.category}Badge`]]}>\n          <Text style={styles.categoryText}>{holding.category.toUpperCase()}</Text>\n        </View>\n      </View>\n\n      <View style={styles.holdingDetails}>\n        <View style={styles.holdingRow}>\n          <Text style={styles.holdingLabel}>Quantity</Text>\n          <Text style={styles.holdingValue}>{holding.quantity} shares</Text>\n        </View>\n        <View style={styles.holdingRow}>\n          <Text style={styles.holdingLabel}>Avg Price</Text>\n          <Text style={styles.holdingValue}>${holding.avgPrice.toFixed(2)}</Text>\n        </View>\n        <View style={styles.holdingRow}>\n          <Text style={styles.holdingLabel}>Current Price</Text>\n          <Text style={styles.holdingValue}>${holding.currentPrice.toFixed(2)}</Text>\n        </View>\n        <View style={styles.holdingRow}>\n          <Text style={styles.holdingLabel}>Total Value</Text>\n          <Text style={styles.holdingValue}>${holding.totalValue.toFixed(2)}</Text>\n        </View>\n        <View style={styles.holdingRow}>\n          <Text style={styles.holdingLabel}>Unrealized P&L</Text>\n          <Text style={[styles.holdingValue, holding.unrealizedPL >= 0 ? styles.positive : styles.negative]}>\n            {holding.unrealizedPL >= 0 ? '+' : ''}${holding.unrealizedPL.toFixed(2)} (\n            {holding.unrealizedPLPercent >= 0 ? '+' : ''}{holding.unrealizedPLPercent.toFixed(2)}%)\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  if (!connectedWallet) {\n    return (\n      <View style={styles.notConnectedContainer}>\n        <Text style={styles.notConnectedTitle}>Connect Your Wallet</Text>\n        <Text style={styles.notConnectedText}>\n          Connect your Solana wallet to view your portfolio\n        </Text>\n        <TouchableOpacity style={styles.connectButton} onPress={connectWallet}>\n          <Text style={styles.connectButtonText}>Connect Wallet</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView\n      style={styles.container}\n      refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\n    >\n      {renderPortfolioSummary()}\n\n      <View style={styles.holdingsContainer}>\n        <Text style={styles.holdingsTitle}>Your Holdings</Text>\n        {holdings.length === 0 ? (\n          <View style={styles.noHoldingsContainer}>\n            <Text style={styles.noHoldingsText}>No holdings yet</Text>\n            <Text style={styles.noHoldingsSubtext}>\n              Start trading to build your portfolio\n            </Text>\n          </View>\n        ) : (\n          holdings.map(renderHolding)\n        )}\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  notConnectedContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 32,\n    backgroundColor: '#f8f9fa',\n  },\n  notConnectedTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 16,\n  },\n  notConnectedText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 32,\n  },\n  connectButton: {\n    backgroundColor: '#9945FF',\n    paddingHorizontal: 32,\n    paddingVertical: 16,\n    borderRadius: 12,\n  },\n  connectButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: '600',\n  },\n  summaryContainer: {\n    backgroundColor: '#fff',\n    margin: 16,\n    borderRadius: 16,\n    padding: 24,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 4,\n  },\n  summaryHeader: {\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  summaryTitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 8,\n  },\n  totalValue: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  dayChange: {\n    alignItems: 'center',\n  },\n  dayChangeText: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  dayChangeLabel: {\n    fontSize: 12,\n    color: '#999',\n    marginTop: 2,\n  },\n  summaryStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: '#f0f0f0',\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n  statValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n  },\n  statPercent: {\n    fontSize: 12,\n    marginTop: 2,\n  },\n  positive: {\n    color: '#4caf50',\n  },\n  negative: {\n    color: '#f44336',\n  },\n  holdingsContainer: {\n    padding: 16,\n  },\n  holdingsTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 16,\n  },\n  noHoldingsContainer: {\n    alignItems: 'center',\n    paddingVertical: 40,\n  },\n  noHoldingsText: {\n    fontSize: 18,\n    color: '#666',\n    marginBottom: 8,\n  },\n  noHoldingsSubtext: {\n    fontSize: 14,\n    color: '#999',\n  },\n  holdingItem: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  holdingHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  holdingSymbol: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  holdingName: {\n    fontSize: 14,\n    color: '#666',\n  },\n  categoryBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  traditionalBadge: {\n    backgroundColor: '#e3f2fd',\n  },\n  cryptoBadge: {\n    backgroundColor: '#f3e5f5',\n  },\n  premiumBadge: {\n    backgroundColor: '#fff3e0',\n  },\n  categoryText: {\n    fontSize: 10,\n    fontWeight: '600',\n    color: '#666',\n  },\n  holdingDetails: {\n    gap: 8,\n  },\n  holdingRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  holdingLabel: {\n    fontSize: 14,\n    color: '#666',\n  },\n  holdingValue: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#333',\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}