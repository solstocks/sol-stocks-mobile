{"version":3,"file":"static/js/main.6e8b303a.js","mappings":"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","sources":["src/components/MobilePortfolio.tsx","index.js","src/utils/solanaPayIntegration.ts","App.tsx","src/utils/solanaConfig.ts","src/components/MobileStockListing.tsx","src/utils/seedVault.ts","src/utils/mobileWalletAdapter.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  RefreshControl,\n  Dimensions,\n} from 'react-native';\nimport { PublicKey } from '@solana/web3.js';\nimport { mobileWalletService } from '../utils/mobileWalletAdapter';\nimport { solanaPayService } from '../utils/solanaPayIntegration';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst { width } = Dimensions.get('window');\n\ninterface PortfolioHolding {\n  symbol: string;\n  name: string;\n  quantity: number;\n  avgPrice: number;\n  currentPrice: number;\n  totalValue: number;\n  unrealizedPL: number;\n  unrealizedPLPercent: number;\n  category: 'traditional' | 'crypto' | 'premium';\n}\n\ninterface PortfolioSummary {\n  totalValue: number;\n  totalInvested: number;\n  totalPL: number;\n  totalPLPercent: number;\n  solBalance: number;\n  dayChange: number;\n  dayChangePercent: number;\n}\n\nexport const MobilePortfolio: React.FC = () => {\n  const [connectedWallet, setConnectedWallet] = useState<PublicKey | null>(null);\n  const [holdings, setHoldings] = useState<PortfolioHolding[]>([]);\n  const [summary, setSummary] = useState<PortfolioSummary>({\n    totalValue: 0,\n    totalInvested: 0,\n    totalPL: 0,\n    totalPLPercent: 0,\n    solBalance: 0,\n    dayChange: 0,\n    dayChangePercent: 0,\n  });\n  const [refreshing, setRefreshing] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    checkWalletConnection();\n  }, []);\n\n  useEffect(() => {\n    if (connectedWallet) {\n      loadPortfolioData();\n    }\n  }, [connectedWallet]);\n\n  const checkWalletConnection = async () => {\n    try {\n      const publicKey = mobileWalletService.getPublicKey();\n      setConnectedWallet(publicKey);\n    } catch (error) {\n      console.error('Failed to check wallet connection:', error);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const publicKey = await mobileWalletService.connect();\n      if (publicKey) {\n        setConnectedWallet(publicKey);\n        Alert.alert('Success', `Wallet connected: ${publicKey.toBase58().substring(0, 8)}...`);\n      }\n    } catch (error) {\n      console.error('Wallet connection failed:', error);\n      Alert.alert('Error', 'Failed to connect wallet');\n    }\n  };\n\n  const loadPortfolioData = async () => {\n    if (!connectedWallet) return;\n\n    setIsLoading(true);\n    try {\n      // Load user's transaction history and calculate holdings\n      const paymentHistory = await solanaPayService.getPaymentHistory();\n      const confirmedPurchases = paymentHistory.filter(p => p.status === 'confirmed');\n      \n      // Group purchases by stock symbol\n      const holdingsMap = new Map<string, any>();\n      \n      confirmedPurchases.forEach(purchase => {\n        if (holdingsMap.has(purchase.stockSymbol)) {\n          const existing = holdingsMap.get(purchase.stockSymbol);\n          existing.quantity += purchase.quantity;\n          existing.totalInvested += purchase.totalUSD;\n        } else {\n          holdingsMap.set(purchase.stockSymbol, {\n            symbol: purchase.stockSymbol,\n            quantity: purchase.quantity,\n            totalInvested: purchase.totalUSD,\n            category: purchase.category,\n          });\n        }\n      });\n\n      // Convert to holdings array with current prices\n      const holdingsArray: PortfolioHolding[] = Array.from(holdingsMap.values()).map(holding => {\n        const currentPrice = getCurrentStockPrice(holding.symbol);\n        const avgPrice = holding.totalInvested / holding.quantity;\n        const totalValue = currentPrice * holding.quantity;\n        const unrealizedPL = totalValue - holding.totalInvested;\n        const unrealizedPLPercent = (unrealizedPL / holding.totalInvested) * 100;\n\n        return {\n          symbol: holding.symbol,\n          name: getStockName(holding.symbol),\n          quantity: holding.quantity,\n          avgPrice,\n          currentPrice,\n          totalValue,\n          unrealizedPL,\n          unrealizedPLPercent,\n          category: holding.category,\n        };\n      });\n\n      setHoldings(holdingsArray);\n\n      // Calculate portfolio summary\n      const totalValue = holdingsArray.reduce((sum, holding) => sum + holding.totalValue, 0);\n      const totalInvested = holdingsArray.reduce((sum, holding) => sum + (holding.avgPrice * holding.quantity), 0);\n      const totalPL = totalValue - totalInvested;\n      const totalPLPercent = totalInvested > 0 ? (totalPL / totalInvested) * 100 : 0;\n      \n      // Get SOL balance\n      const solBalance = await mobileWalletService.getBalance();\n      \n      // Mock day change (in production, this would be calculated from historical data)\n      const dayChange = totalValue * (Math.random() * 0.06 - 0.03); // Random ±3%\n      const dayChangePercent = totalValue > 0 ? (dayChange / totalValue) * 100 : 0;\n\n      setSummary({\n        totalValue,\n        totalInvested,\n        totalPL,\n        totalPLPercent,\n        solBalance,\n        dayChange,\n        dayChangePercent,\n      });\n\n    } catch (error) {\n      console.error('Failed to load portfolio data:', error);\n      Alert.alert('Error', 'Failed to load portfolio data');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getCurrentStockPrice = (symbol: string): number => {\n    // Mock current prices (in production, this would come from an API)\n    const prices: { [key: string]: number } = {\n      'AAPL': 178.72,\n      'GOOGL': 138.21,\n      'MSFT': 378.85,\n      'TSLA': 248.50,\n      'AMZN': 155.89,\n      'COIN': 245.67,\n      'MSTR': 387.45,\n      'RIOT': 12.85,\n      'MARA': 19.67,\n      'HOOD': 23.45,\n      'VANA': 45.32,\n      'CIRCLE': 125.00,\n      'GEMINI': 89.50,\n      'KRAKEN': 156.78,\n      'OPENSEA': 67.34,\n    };\n    return prices[symbol] || 100;\n  };\n\n  const getStockName = (symbol: string): string => {\n    const names: { [key: string]: string } = {\n      'AAPL': 'Apple Inc.',\n      'GOOGL': 'Alphabet Inc.',\n      'MSFT': 'Microsoft Corp.',\n      'TSLA': 'Tesla Inc.',\n      'AMZN': 'Amazon.com Inc.',\n      'COIN': 'Coinbase Global',\n      'MSTR': 'MicroStrategy Inc.',\n      'RIOT': 'Riot Platforms',\n      'MARA': 'Marathon Digital',\n      'HOOD': 'Robinhood Markets',\n      'VANA': 'Vanna Holdings',\n      'CIRCLE': 'Circle Internet Financial',\n      'GEMINI': 'Gemini Trust Company',\n      'KRAKEN': 'Kraken Digital Asset Exchange',\n      'OPENSEA': 'OpenSea Technologies',\n    };\n    return names[symbol] || symbol;\n  };\n\n  const handleSellStock = async (holding: PortfolioHolding) => {\n    Alert.prompt(\n      'Sell Stock',\n      `How many shares of ${holding.symbol} would you like to sell?\\nYou own ${holding.quantity} shares`,\n      [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'Sell',\n          onPress: async (quantity) => {\n            if (quantity && !isNaN(Number(quantity))) {\n              const sellQuantity = Number(quantity);\n              if (sellQuantity > holding.quantity) {\n                Alert.alert('Error', 'You cannot sell more shares than you own');\n                return;\n              }\n              await processSell(holding, sellQuantity);\n            }\n          },\n        },\n      ],\n      'plain-text',\n      Math.min(holding.quantity, 1).toString()\n    );\n  };\n\n  const processSell = async (holding: PortfolioHolding, quantity: number) => {\n    try {\n      if (!connectedWallet) return;\n\n      const sellValue = holding.currentPrice * quantity;\n      const { feeSOL } = solanaPayService.calculateTradingFee(holding.symbol, sellValue / 200, 'sell'); // Assuming $200 SOL\n      const netSOL = (sellValue / 200) - feeSOL;\n\n      Alert.alert(\n        'Confirm Sale',\n        `Sell ${quantity} shares of ${holding.symbol}\\n\\n` +\n        `Sale Value: $${sellValue.toFixed(2)}\\n` +\n        `You'll receive: ${netSOL.toFixed(4)} SOL\\n` +\n        `Trading Fee: ${feeSOL.toFixed(4)} SOL`,\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { text: 'Confirm Sale', onPress: () => executeSell(holding, quantity, netSOL) },\n        ]\n      );\n    } catch (error) {\n      console.error('Sell processing failed:', error);\n      Alert.alert('Error', 'Failed to process sale');\n    }\n  };\n\n  const executeSell = async (holding: PortfolioHolding, quantity: number, netSOL: number) => {\n    try {\n      // In a real implementation, this would create a sell transaction\n      // For now, we'll simulate the sale by updating local storage\n      \n      Alert.alert(\n        'Sale Successful!',\n        `Sold ${quantity} shares of ${holding.symbol}\\n` +\n        `Received: ${netSOL.toFixed(4)} SOL`,\n        [{ text: 'OK', onPress: () => onRefresh() }]\n      );\n    } catch (error) {\n      console.error('Sell execution failed:', error);\n      Alert.alert('Error', 'Failed to execute sale');\n    }\n  };\n\n  const onRefresh = async () => {\n    setRefreshing(true);\n    await loadPortfolioData();\n    setRefreshing(false);\n  };\n\n  const renderPortfolioSummary = () => (\n    <View style={styles.summaryContainer}>\n      <View style={styles.summaryHeader}>\n        <Text style={styles.summaryTitle}>Portfolio Value</Text>\n        <Text style={styles.totalValue}>${summary.totalValue.toFixed(2)}</Text>\n        <View style={styles.dayChange}>\n          <Text style={[styles.dayChangeText, summary.dayChange >= 0 ? styles.positive : styles.negative]}>\n            {summary.dayChange >= 0 ? '+' : ''}${Math.abs(summary.dayChange).toFixed(2)} (\n            {summary.dayChangePercent >= 0 ? '+' : ''}{summary.dayChangePercent.toFixed(2)}%)\n          </Text>\n          <Text style={styles.dayChangeLabel}>Today</Text>\n        </View>\n      </View>\n\n      <View style={styles.summaryStats}>\n        <View style={styles.statItem}>\n          <Text style={styles.statLabel}>Total P&L</Text>\n          <Text style={[styles.statValue, summary.totalPL >= 0 ? styles.positive : styles.negative]}>\n            {summary.totalPL >= 0 ? '+' : ''}${summary.totalPL.toFixed(2)}\n          </Text>\n          <Text style={[styles.statPercent, summary.totalPL >= 0 ? styles.positive : styles.negative]}>\n            ({summary.totalPLPercent >= 0 ? '+' : ''}{summary.totalPLPercent.toFixed(2)}%)\n          </Text>\n        </View>\n        \n        <View style={styles.statItem}>\n          <Text style={styles.statLabel}>SOL Balance</Text>\n          <Text style={styles.statValue}>{summary.solBalance.toFixed(4)} SOL</Text>\n          <Text style={styles.statPercent}>${(summary.solBalance * 200).toFixed(2)}</Text>\n        </View>\n      </View>\n    </View>\n  );\n\n  const renderHolding = (holding: PortfolioHolding) => (\n    <TouchableOpacity\n      key={holding.symbol}\n      style={styles.holdingItem}\n      onPress={() => handleSellStock(holding)}\n    >\n      <View style={styles.holdingHeader}>\n        <View>\n          <Text style={styles.holdingSymbol}>{holding.symbol}</Text>\n          <Text style={styles.holdingName}>{holding.name}</Text>\n        </View>\n        <View style={[styles.categoryBadge, styles[`${holding.category}Badge`]]}>\n          <Text style={styles.categoryText}>{holding.category.toUpperCase()}</Text>\n        </View>\n      </View>\n\n      <View style={styles.holdingDetails}>\n        <View style={styles.holdingRow}>\n          <Text style={styles.holdingLabel}>Quantity</Text>\n          <Text style={styles.holdingValue}>{holding.quantity} shares</Text>\n        </View>\n        <View style={styles.holdingRow}>\n          <Text style={styles.holdingLabel}>Avg Price</Text>\n          <Text style={styles.holdingValue}>${holding.avgPrice.toFixed(2)}</Text>\n        </View>\n        <View style={styles.holdingRow}>\n          <Text style={styles.holdingLabel}>Current Price</Text>\n          <Text style={styles.holdingValue}>${holding.currentPrice.toFixed(2)}</Text>\n        </View>\n        <View style={styles.holdingRow}>\n          <Text style={styles.holdingLabel}>Total Value</Text>\n          <Text style={styles.holdingValue}>${holding.totalValue.toFixed(2)}</Text>\n        </View>\n        <View style={styles.holdingRow}>\n          <Text style={styles.holdingLabel}>Unrealized P&L</Text>\n          <Text style={[styles.holdingValue, holding.unrealizedPL >= 0 ? styles.positive : styles.negative]}>\n            {holding.unrealizedPL >= 0 ? '+' : ''}${holding.unrealizedPL.toFixed(2)} (\n            {holding.unrealizedPLPercent >= 0 ? '+' : ''}{holding.unrealizedPLPercent.toFixed(2)}%)\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  if (!connectedWallet) {\n    return (\n      <View style={styles.notConnectedContainer}>\n        <Text style={styles.notConnectedTitle}>Connect Your Wallet</Text>\n        <Text style={styles.notConnectedText}>\n          Connect your Solana wallet to view your portfolio\n        </Text>\n        <TouchableOpacity style={styles.connectButton} onPress={connectWallet}>\n          <Text style={styles.connectButtonText}>Connect Wallet</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView\n      style={styles.container}\n      refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\n    >\n      {renderPortfolioSummary()}\n\n      <View style={styles.holdingsContainer}>\n        <Text style={styles.holdingsTitle}>Your Holdings</Text>\n        {holdings.length === 0 ? (\n          <View style={styles.noHoldingsContainer}>\n            <Text style={styles.noHoldingsText}>No holdings yet</Text>\n            <Text style={styles.noHoldingsSubtext}>\n              Start trading to build your portfolio\n            </Text>\n          </View>\n        ) : (\n          holdings.map(renderHolding)\n        )}\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  notConnectedContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 32,\n    backgroundColor: '#f8f9fa',\n  },\n  notConnectedTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 16,\n  },\n  notConnectedText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 32,\n  },\n  connectButton: {\n    backgroundColor: '#9945FF',\n    paddingHorizontal: 32,\n    paddingVertical: 16,\n    borderRadius: 12,\n  },\n  connectButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: '600',\n  },\n  summaryContainer: {\n    backgroundColor: '#fff',\n    margin: 16,\n    borderRadius: 16,\n    padding: 24,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 4,\n  },\n  summaryHeader: {\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  summaryTitle: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 8,\n  },\n  totalValue: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 8,\n  },\n  dayChange: {\n    alignItems: 'center',\n  },\n  dayChangeText: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  dayChangeLabel: {\n    fontSize: 12,\n    color: '#999',\n    marginTop: 2,\n  },\n  summaryStats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: '#f0f0f0',\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n  statValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n  },\n  statPercent: {\n    fontSize: 12,\n    marginTop: 2,\n  },\n  positive: {\n    color: '#4caf50',\n  },\n  negative: {\n    color: '#f44336',\n  },\n  holdingsContainer: {\n    padding: 16,\n  },\n  holdingsTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: 16,\n  },\n  noHoldingsContainer: {\n    alignItems: 'center',\n    paddingVertical: 40,\n  },\n  noHoldingsText: {\n    fontSize: 18,\n    color: '#666',\n    marginBottom: 8,\n  },\n  noHoldingsSubtext: {\n    fontSize: 14,\n    color: '#999',\n  },\n  holdingItem: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  holdingHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  holdingSymbol: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  holdingName: {\n    fontSize: 14,\n    color: '#666',\n  },\n  categoryBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  traditionalBadge: {\n    backgroundColor: '#e3f2fd',\n  },\n  cryptoBadge: {\n    backgroundColor: '#f3e5f5',\n  },\n  premiumBadge: {\n    backgroundColor: '#fff3e0',\n  },\n  categoryText: {\n    fontSize: 10,\n    fontWeight: '600',\n    color: '#666',\n  },\n  holdingDetails: {\n    gap: 8,\n  },\n  holdingRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  holdingLabel: {\n    fontSize: 14,\n    color: '#666',\n  },\n  holdingValue: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#333',\n  },\n});","/**\n * @format\n */\nimport {Buffer} from 'buffer';\nimport 'react-native-get-random-values';\n\nimport {AppRegistry} from 'react-native';\nimport App from './App';\nimport {name as appName} from './app.json';\n\n// Mock event listener functions to prevent them from fataling.\nwindow.addEventListener = () => {};\nwindow.removeEventListener = () => {};\nwindow.Buffer = Buffer;\n\nAppRegistry.registerComponent(appName, () => App);\n","import {\n  createTransfer,\n  createTransferInstruction,\n  encodeURL,\n  findTransactionSignature,\n  parseURL,\n  validateTransactionSignature,\n  TransferRequestURL,\n  TransactionRequestURL,\n} from '@solana/pay';\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  LAMPORTS_PER_SOL,\n  SendOptions,\n} from '@solana/web3.js';\nimport { connection, PROJECT_TREASURY, FEE_STRUCTURE, MOCK_SOL_PRICE_USD, BONK_MINT } from './solanaConfig';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport interface PaymentRequest {\n  recipient: PublicKey;\n  amount: number;\n  splToken?: PublicKey;\n  reference?: PublicKey;\n  label?: string;\n  message?: string;\n  memo?: string;\n}\n\nexport interface StockPurchasePayment {\n  stockSymbol: string;\n  stockPrice: number;\n  quantity: number;\n  totalUSD: number;\n  solAmount: number;\n  bonkAmount?: number;\n  feeSOL: number;\n  category: 'traditional' | 'crypto' | 'premium';\n}\n\n/**\n * Solana Pay integration for mobile payments\n * Supports both SOL and BONK token payments\n */\nexport class SolanaPayService {\n  private connection: Connection;\n\n  constructor() {\n    this.connection = connection;\n  }\n\n  /**\n   * Create a Solana Pay transfer URL for stock purchases\n   */\n  async createStockPurchaseURL(\n    payment: StockPurchasePayment,\n    paymentMethod: 'SOL' | 'BONK' = 'SOL'\n  ): Promise<{ url: URL; reference: PublicKey }> {\n    try {\n      const reference = new PublicKey(Array(32).fill(0).map(() => Math.floor(Math.random() * 256)));\n      \n      const transferRequest: TransferRequestURL = {\n        recipient: PROJECT_TREASURY,\n        amount: paymentMethod === 'SOL' ? payment.solAmount + payment.feeSOL : payment.bonkAmount || 0,\n        splToken: paymentMethod === 'BONK' ? BONK_MINT : undefined,\n        reference,\n        label: `Sol Stocks - ${payment.stockSymbol}`,\n        message: `Purchase ${payment.quantity} shares of ${payment.stockSymbol} for $${payment.totalUSD.toFixed(2)}`,\n        memo: `STOCK_PURCHASE:${payment.stockSymbol}:${payment.quantity}:${paymentMethod}`,\n      };\n\n      const url = encodeURL(transferRequest);\n      \n      // Store payment details for confirmation\n      await this.storePaymentReference(reference.toBase58(), {\n        ...payment,\n        paymentMethod,\n        timestamp: Date.now(),\n        status: 'pending',\n      });\n\n      return { url, reference };\n    } catch (error) {\n      console.error('Failed to create payment URL:', error);\n      throw new Error('Failed to create payment URL');\n    }\n  }\n\n  /**\n   * Create a direct transfer instruction for mobile wallet\n   */\n  async createStockPurchaseTransaction(\n    userPublicKey: PublicKey,\n    payment: StockPurchasePayment,\n    paymentMethod: 'SOL' | 'BONK' = 'SOL'\n  ): Promise<Transaction> {\n    try {\n      const transaction = new Transaction();\n      \n      if (paymentMethod === 'SOL') {\n        // Add stock purchase amount transfer\n        const stockTransfer = SystemProgram.transfer({\n          fromPubkey: userPublicKey,\n          toPubkey: PROJECT_TREASURY,\n          lamports: payment.solAmount * LAMPORTS_PER_SOL,\n        });\n        transaction.add(stockTransfer);\n\n        // Add trading fee transfer\n        const feeTransfer = SystemProgram.transfer({\n          fromPubkey: userPublicKey,\n          toPubkey: PROJECT_TREASURY,\n          lamports: payment.feeSOL * LAMPORTS_PER_SOL,\n        });\n        transaction.add(feeTransfer);\n      } else if (paymentMethod === 'BONK' && payment.bonkAmount) {\n        // BONK token transfer (would need SPL token program instructions)\n        // For now, we'll implement SOL fallback\n        const totalSOL = payment.solAmount + payment.feeSOL;\n        const transfer = SystemProgram.transfer({\n          fromPubkey: userPublicKey,\n          toPubkey: PROJECT_TREASURY,\n          lamports: totalSOL * LAMPORTS_PER_SOL,\n        });\n        transaction.add(transfer);\n      }\n\n      // Add memo instruction for transaction tracking\n      const memoInstruction = new Transaction().add(\n        SystemProgram.transfer({\n          fromPubkey: userPublicKey,\n          toPubkey: userPublicKey,\n          lamports: 0,\n        })\n      );\n      \n      // Set recent blockhash\n      const { blockhash } = await this.connection.getLatestBlockhash();\n      transaction.recentBlockhash = blockhash;\n      transaction.feePayer = userPublicKey;\n\n      return transaction;\n    } catch (error) {\n      console.error('Failed to create transaction:', error);\n      throw new Error('Failed to create stock purchase transaction');\n    }\n  }\n\n  /**\n   * Calculate trading fees based on stock category\n   */\n  calculateTradingFee(\n    stockSymbol: string,\n    amount: number,\n    action: 'buy' | 'sell' = 'buy'\n  ): { category: 'traditional' | 'crypto' | 'premium'; feeSOL: number; feePercent: number } {\n    // Determine stock category\n    let category: 'traditional' | 'crypto' | 'premium' = 'traditional';\n    \n    const cryptoStocks = ['COIN', 'MSTR', 'RIOT', 'MARA', 'HOOD', 'SQ', 'VANA', 'BTBT', 'BTCS', 'SBET', 'GAME', 'UPXI'];\n    const premiumStocks = ['CIRCLE', 'GEMINI', 'KRAKEN', 'OPENSEA'];\n    \n    if (cryptoStocks.includes(stockSymbol)) {\n      category = 'crypto';\n    } else if (premiumStocks.includes(stockSymbol)) {\n      category = 'premium';\n    }\n\n    const feeConfig = FEE_STRUCTURE[category];\n    const feePercent = action === 'buy' ? feeConfig.buyFeePercent : feeConfig.sellFeePercent;\n    \n    let feeSOL = (amount * feePercent) / 100;\n    \n    // Apply min/max limits\n    feeSOL = Math.max(feeConfig.minFeeSOL, Math.min(feeSOL, feeConfig.maxFeeSOL));\n\n    return { category, feeSOL, feePercent };\n  }\n\n  /**\n   * Convert USD amount to SOL and BONK equivalents\n   */\n  convertUSDToTokens(usdAmount: number): { solAmount: number; bonkAmount: number } {\n    const solAmount = usdAmount / MOCK_SOL_PRICE_USD;\n    const bonkAmount = usdAmount * 1000000; // Mock BONK rate: 1 USD = 1M BONK\n    \n    return { solAmount, bonkAmount };\n  }\n\n  /**\n   * Create complete stock purchase payment object\n   */\n  createStockPurchasePayment(\n    stockSymbol: string,\n    stockPrice: number,\n    quantity: number\n  ): StockPurchasePayment {\n    const totalUSD = stockPrice * quantity;\n    const { solAmount, bonkAmount } = this.convertUSDToTokens(totalUSD);\n    const { category, feeSOL } = this.calculateTradingFee(stockSymbol, solAmount, 'buy');\n\n    return {\n      stockSymbol,\n      stockPrice,\n      quantity,\n      totalUSD,\n      solAmount,\n      bonkAmount,\n      feeSOL,\n      category,\n    };\n  }\n\n  /**\n   * Confirm payment by checking transaction on blockchain\n   */\n  async confirmPayment(reference: PublicKey, timeout: number = 60000): Promise<{\n    signature: string;\n    confirmed: boolean;\n    paymentDetails?: any;\n  }> {\n    try {\n      const startTime = Date.now();\n      \n      while (Date.now() - startTime < timeout) {\n        try {\n          // Look for transaction with this reference\n          const signature = await findTransactionSignature(\n            this.connection,\n            reference,\n            undefined,\n            'confirmed'\n          );\n\n          if (signature) {\n            // Validate the transaction\n            const isValid = await validateTransactionSignature(\n              this.connection,\n              signature,\n              PROJECT_TREASURY,\n              undefined,\n              reference,\n              'confirmed'\n            );\n\n            if (isValid) {\n              // Get stored payment details\n              const paymentDetails = await this.getPaymentReference(reference.toBase58());\n              \n              // Update payment status\n              if (paymentDetails) {\n                await this.updatePaymentStatus(reference.toBase58(), 'confirmed', signature);\n              }\n\n              return {\n                signature,\n                confirmed: true,\n                paymentDetails,\n              };\n            }\n          }\n        } catch (error) {\n          // Continue polling\n        }\n\n        // Wait before next check\n        await new Promise(resolve => setTimeout(resolve, 2000));\n      }\n\n      return {\n        signature: '',\n        confirmed: false,\n      };\n    } catch (error) {\n      console.error('Payment confirmation failed:', error);\n      return {\n        signature: '',\n        confirmed: false,\n      };\n    }\n  }\n\n  /**\n   * Store payment reference for tracking\n   */\n  private async storePaymentReference(reference: string, paymentData: any): Promise<void> {\n    try {\n      await AsyncStorage.setItem(`payment_${reference}`, JSON.stringify(paymentData));\n    } catch (error) {\n      console.error('Failed to store payment reference:', error);\n    }\n  }\n\n  /**\n   * Get payment reference data\n   */\n  private async getPaymentReference(reference: string): Promise<any> {\n    try {\n      const data = await AsyncStorage.getItem(`payment_${reference}`);\n      return data ? JSON.parse(data) : null;\n    } catch (error) {\n      console.error('Failed to get payment reference:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Update payment status\n   */\n  private async updatePaymentStatus(\n    reference: string,\n    status: 'pending' | 'confirmed' | 'failed',\n    signature?: string\n  ): Promise<void> {\n    try {\n      const existingData = await this.getPaymentReference(reference);\n      if (existingData) {\n        const updatedData = {\n          ...existingData,\n          status,\n          signature,\n          confirmedAt: status === 'confirmed' ? Date.now() : undefined,\n        };\n        await AsyncStorage.setItem(`payment_${reference}`, JSON.stringify(updatedData));\n      }\n    } catch (error) {\n      console.error('Failed to update payment status:', error);\n    }\n  }\n\n  /**\n   * Get payment history\n   */\n  async getPaymentHistory(): Promise<any[]> {\n    try {\n      const keys = await AsyncStorage.getAllKeys();\n      const paymentKeys = keys.filter(key => key.startsWith('payment_'));\n      \n      const payments = await Promise.all(\n        paymentKeys.map(async (key) => {\n          try {\n            const data = await AsyncStorage.getItem(key);\n            return data ? JSON.parse(data) : null;\n          } catch {\n            return null;\n          }\n        })\n      );\n\n      return payments\n        .filter(payment => payment !== null)\n        .sort((a, b) => b.timestamp - a.timestamp);\n    } catch (error) {\n      console.error('Failed to get payment history:', error);\n      return [];\n    }\n  }\n}\n\n// Export singleton instance\nexport const solanaPayService = new SolanaPayService();","import React, { useState, useEffect } from 'react';\nimport {\n  SafeAreaView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Alert,\n  Linking,\n} from 'react-native';\nimport { MobileStockListing } from './src/components/MobileStockListing';\nimport { MobilePortfolio } from './src/components/MobilePortfolio';\nimport { mobileWalletService } from './src/utils/mobileWalletAdapter';\nimport { seedVaultService } from './src/utils/seedVault';\nimport { PublicKey } from '@solana/web3.js';\n\ntype Tab = 'stocks' | 'portfolio';\n\nconst App: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<Tab>('stocks');\n  const [connectedWallet, setConnectedWallet] = useState<PublicKey | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    initializeApp();\n    setupDeepLinkHandler();\n  }, []);\n\n  const initializeApp = async () => {\n    try {\n      // Check if device supports secure hardware\n      const isDeviceSecure = await seedVaultService.isDeviceSecure();\n      if (!isDeviceSecure) {\n        Alert.alert(\n          'Security Warning',\n          'Your device may not support hardware-backed key storage. Proceed with caution.',\n          [{ text: 'OK' }]\n        );\n      }\n\n      // Check for existing wallet connection\n      const publicKey = mobileWalletService.getPublicKey();\n      if (publicKey) {\n        setConnectedWallet(publicKey);\n      }\n\n      setIsLoading(false);\n    } catch (error) {\n      console.error('App initialization failed:', error);\n      setIsLoading(false);\n    }\n  };\n\n  const setupDeepLinkHandler = () => {\n    // Handle Solana Pay deep links\n    const handleDeepLink = (url: string) => {\n      console.log('Received deep link:', url);\n      \n      if (url.startsWith('solana:')) {\n        // Handle Solana Pay URLs\n        Alert.alert(\n          'Payment Request',\n          'You have received a payment request. Would you like to process it?',\n          [\n            { text: 'Cancel', style: 'cancel' },\n            { text: 'Pay', onPress: () => handleSolanaPayment(url) },\n          ]\n        );\n      }\n    };\n\n    // Listen for deep links when app is running\n    Linking.addEventListener('url', (event) => {\n      handleDeepLink(event.url);\n    });\n\n    // Handle deep links when app is launched\n    Linking.getInitialURL().then((url) => {\n      if (url) {\n        handleDeepLink(url);\n      }\n    });\n  };\n\n  const handleSolanaPayment = async (paymentUrl: string) => {\n    try {\n      // Parse and handle Solana Pay URL\n      // This would integrate with the solanaPayService\n      console.log('Processing Solana Pay URL:', paymentUrl);\n      Alert.alert('Payment Processing', 'Processing your payment request...');\n    } catch (error) {\n      console.error('Payment processing failed:', error);\n      Alert.alert('Error', 'Failed to process payment');\n    }\n  };\n\n  const handleWalletConnect = async () => {\n    try {\n      const publicKey = await mobileWalletService.connect();\n      if (publicKey) {\n        setConnectedWallet(publicKey);\n        Alert.alert(\n          'Wallet Connected',\n          `Successfully connected: ${publicKey.toBase58().substring(0, 8)}...`\n        );\n      }\n    } catch (error) {\n      console.error('Wallet connection failed:', error);\n      Alert.alert('Connection Failed', 'Unable to connect to wallet');\n    }\n  };\n\n  const handleWalletDisconnect = async () => {\n    try {\n      await mobileWalletService.disconnect();\n      setConnectedWallet(null);\n      Alert.alert('Wallet Disconnected', 'Your wallet has been disconnected');\n    } catch (error) {\n      console.error('Wallet disconnection failed:', error);\n    }\n  };\n\n  const requestAirdrop = async () => {\n    if (!connectedWallet) {\n      Alert.alert('No Wallet', 'Please connect your wallet first');\n      return;\n    }\n\n    try {\n      Alert.alert(\n        'Request Airdrop',\n        'Request 2 SOL from devnet faucet?',\n        [\n          { text: 'Cancel', style: 'cancel' },\n          {\n            text: 'Request',\n            onPress: async () => {\n              const signature = await mobileWalletService.requestAirdrop(2);\n              if (signature) {\n                Alert.alert(\n                  'Airdrop Successful',\n                  `Received 2 SOL!\\n\\nTransaction: ${signature.substring(0, 8)}...`\n                );\n              } else {\n                Alert.alert('Airdrop Failed', 'Unable to request airdrop');\n              }\n            },\n          },\n        ]\n      );\n    } catch (error) {\n      console.error('Airdrop request failed:', error);\n      Alert.alert('Error', 'Failed to request airdrop');\n    }\n  };\n\n  const renderHeader = () => (\n    <View style={styles.header}>\n      <View style={styles.headerTop}>\n        <Text style={styles.appTitle}>Sol Stocks</Text>\n        <View style={styles.headerActions}>\n          {connectedWallet ? (\n            <View style={styles.walletInfo}>\n              <Text style={styles.walletAddress}>\n                {connectedWallet.toBase58().substring(0, 6)}...\n              </Text>\n              <TouchableOpacity\n                style={styles.airdropButton}\n                onPress={requestAirdrop}\n              >\n                <Text style={styles.airdropButtonText}>💧 Airdrop</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.disconnectButton}\n                onPress={handleWalletDisconnect}\n              >\n                <Text style={styles.disconnectButtonText}>Disconnect</Text>\n              </TouchableOpacity>\n            </View>\n          ) : (\n            <TouchableOpacity\n              style={styles.connectButton}\n              onPress={handleWalletConnect}\n            >\n              <Text style={styles.connectButtonText}>Connect Wallet</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      </View>\n      \n      <Text style={styles.appSubtitle}>\n        Trade stocks with Solana • Powered by Mobile Wallet Adapter\n      </Text>\n    </View>\n  );\n\n  const renderTabBar = () => (\n    <View style={styles.tabBar}>\n      <TouchableOpacity\n        style={[styles.tab, activeTab === 'stocks' && styles.activeTab]}\n        onPress={() => setActiveTab('stocks')}\n      >\n        <Text style={[styles.tabText, activeTab === 'stocks' && styles.activeTabText]}>\n          📈 Stocks\n        </Text>\n      </TouchableOpacity>\n      \n      <TouchableOpacity\n        style={[styles.tab, activeTab === 'portfolio' && styles.activeTab]}\n        onPress={() => setActiveTab('portfolio')}\n      >\n        <Text style={[styles.tabText, activeTab === 'portfolio' && styles.activeTabText]}>\n          💼 Portfolio\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  if (isLoading) {\n    return (\n      <SafeAreaView style={styles.loadingContainer}>\n        <StatusBar barStyle=\"light-content\" backgroundColor=\"#9945FF\" />\n        <Text style={styles.loadingText}>Loading Sol Stocks...</Text>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#9945FF\" />\n      \n      {renderHeader()}\n      {renderTabBar()}\n      \n      <View style={styles.content}>\n        {activeTab === 'stocks' ? (\n          <MobileStockListing />\n        ) : (\n          <MobilePortfolio />\n        )}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#9945FF',\n  },\n  loadingText: {\n    fontSize: 18,\n    color: '#fff',\n    fontWeight: '600',\n  },\n  header: {\n    backgroundColor: '#9945FF',\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 4,\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  appTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  appSubtitle: {\n    fontSize: 14,\n    color: '#e0e0ff',\n    opacity: 0.9,\n  },\n  headerActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  walletInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  walletAddress: {\n    fontSize: 12,\n    color: '#fff',\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    fontFamily: 'monospace',\n  },\n  connectButton: {\n    backgroundColor: '#14f195',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 8,\n  },\n  connectButtonText: {\n    color: '#000',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  airdropButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 6,\n  },\n  airdropButtonText: {\n    color: '#fff',\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  disconnectButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 6,\n  },\n  disconnectButtonText: {\n    color: '#fff',\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  tabBar: {\n    flexDirection: 'row',\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 16,\n    alignItems: 'center',\n    borderBottomWidth: 2,\n    borderBottomColor: 'transparent',\n  },\n  activeTab: {\n    borderBottomColor: '#9945FF',\n  },\n  tabText: {\n    fontSize: 16,\n    color: '#666',\n    fontWeight: '500',\n  },\n  activeTabText: {\n    color: '#9945FF',\n    fontWeight: '600',\n  },\n  content: {\n    flex: 1,\n  },\n});\n\nexport default App;\n","import { Connection, PublicKey, clusterApiUrl } from '@solana/web3.js';\n\n// Solana network configuration\nexport const SOLANA_NETWORK = 'devnet'; // Use devnet for development\nexport const RPC_ENDPOINT = clusterApiUrl(SOLANA_NETWORK);\n\n// Initialize Solana connection\nexport const connection = new Connection(RPC_ENDPOINT, 'confirmed');\n\n// Treasury configuration from the Next.js app\nexport const PROJECT_TREASURY = new PublicKey('ATs1VRY6PGi8nSJA1RZJTpEmFc6mXNEnbWBCwWsVKWWY');\nexport const BACKUP_TREASURY = new PublicKey('9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM');\n\n// Fee structure (same as Next.js app)\nexport const FEE_STRUCTURE = {\n  traditional: {\n    buyFeePercent: 0.25,\n    sellFeePercent: 0.35,\n    minFeeSOL: 0.001,\n    maxFeeSOL: 0.1\n  },\n  crypto: {\n    buyFeePercent: 0.35,\n    sellFeePercent: 0.45,\n    minFeeSOL: 0.002,\n    maxFeeSOL: 0.15\n  },\n  premium: {\n    buyFeePercent: 0.5,\n    sellFeePercent: 0.6,\n    minFeeSOL: 0.003,\n    maxFeeSOL: 0.2\n  }\n} as const;\n\n// Stock categories for fee calculation\nexport const STOCK_CATEGORIES = {\n  traditional: ['AAPL', 'GOOGL', 'MSFT', 'TSLA', 'AMZN'],\n  crypto: ['COIN', 'MSTR', 'RIOT', 'MARA', 'HOOD', 'SQ', 'VANA', 'BTBT', 'BTCS', 'SBET', 'GAME', 'UPXI'],\n  premium: ['CIRCLE', 'GEMINI', 'KRAKEN', 'OPENSEA']\n} as const;\n\n// Mock SOL price for conversions\nexport const MOCK_SOL_PRICE_USD = 200;\n\n// Mock BONK token mint address (for testnet)\nexport const BONK_MINT = new PublicKey('DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263');\n\n// Solana Mobile Stack App Identity\nexport const APP_IDENTITY = {\n  name: 'Sol Stocks',\n  uri: 'https://solstocks.com',\n  icon: 'favicon.ico', // Add your app icon here\n};\n\n// dApp Store compatibility\nexport const DAPP_METADATA = {\n  name: 'Sol Stocks',\n  description: 'Trade stocks with SOL and BONK on Solana',\n  image: 'https://solstocks.com/icon.png',\n  website: 'https://solstocks.com',\n  category: 'Finance',\n  version: '1.0.0',\n};","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  FlatList,\n  TouchableOpacity,\n  TextInput,\n  StyleSheet,\n  Alert,\n  ActivityIndicator,\n  RefreshControl,\n} from 'react-native';\nimport { PublicKey } from '@solana/web3.js';\nimport { mobileWalletService } from '../utils/mobileWalletAdapter';\nimport { solanaPayService, StockPurchasePayment } from '../utils/solanaPayIntegration';\nimport { seedVaultService } from '../utils/seedVault';\n\ninterface Stock {\n  symbol: string;\n  name: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  category: 'traditional' | 'crypto' | 'premium';\n  logo?: string;\n}\n\ninterface MobileStockListingProps {\n  onStockSelect?: (stock: Stock) => void;\n}\n\nexport const MobileStockListing: React.FC<MobileStockListingProps> = ({ onStockSelect }) => {\n  const [stocks, setStocks] = useState<Stock[]>([]);\n  const [filteredStocks, setFilteredStocks] = useState<Stock[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<'all' | 'traditional' | 'crypto' | 'premium'>('all');\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [connectedWallet, setConnectedWallet] = useState<PublicKey | null>(null);\n  const [userBalance, setUserBalance] = useState<number>(0);\n\n  // Mock stock data (in production, this would come from an API)\n  const mockStocks: Stock[] = [\n    // Traditional stocks\n    { symbol: 'AAPL', name: 'Apple Inc.', price: 178.72, change: 2.15, changePercent: 1.22, category: 'traditional' },\n    { symbol: 'GOOGL', name: 'Alphabet Inc.', price: 138.21, change: -1.45, changePercent: -1.04, category: 'traditional' },\n    { symbol: 'MSFT', name: 'Microsoft Corp.', price: 378.85, change: 3.22, changePercent: 0.86, category: 'traditional' },\n    { symbol: 'TSLA', name: 'Tesla Inc.', price: 248.50, change: -8.75, changePercent: -3.40, category: 'traditional' },\n    { symbol: 'AMZN', name: 'Amazon.com Inc.', price: 155.89, change: 1.89, changePercent: 1.23, category: 'traditional' },\n    \n    // Crypto stocks\n    { symbol: 'COIN', name: 'Coinbase Global', price: 245.67, change: 15.23, changePercent: 6.60, category: 'crypto' },\n    { symbol: 'MSTR', name: 'MicroStrategy Inc.', price: 387.45, change: 22.15, changePercent: 6.07, category: 'crypto' },\n    { symbol: 'RIOT', name: 'Riot Platforms', price: 12.85, change: 0.95, changePercent: 7.98, category: 'crypto' },\n    { symbol: 'MARA', name: 'Marathon Digital', price: 19.67, change: 1.34, changePercent: 7.31, category: 'crypto' },\n    { symbol: 'HOOD', name: 'Robinhood Markets', price: 23.45, change: -0.67, changePercent: -2.78, category: 'crypto' },\n    { symbol: 'VANA', name: 'Vanna Holdings', price: 45.32, change: 3.21, changePercent: 7.62, category: 'crypto' },\n    \n    // Premium stocks\n    { symbol: 'CIRCLE', name: 'Circle Internet Financial', price: 125.00, change: 5.67, changePercent: 4.75, category: 'premium' },\n    { symbol: 'GEMINI', name: 'Gemini Trust Company', price: 89.50, change: 2.15, changePercent: 2.46, category: 'premium' },\n    { symbol: 'KRAKEN', name: 'Kraken Digital Asset Exchange', price: 156.78, change: 8.90, changePercent: 6.02, category: 'premium' },\n    { symbol: 'OPENSEA', name: 'OpenSea Technologies', price: 67.34, change: -2.45, changePercent: -3.51, category: 'premium' },\n  ];\n\n  useEffect(() => {\n    loadStocks();\n    checkWalletConnection();\n  }, []);\n\n  useEffect(() => {\n    filterStocks();\n  }, [searchQuery, selectedCategory, stocks]);\n\n  const loadStocks = async () => {\n    setIsLoading(true);\n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setStocks(mockStocks);\n    } catch (error) {\n      console.error('Failed to load stocks:', error);\n      Alert.alert('Error', 'Failed to load stock data');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const checkWalletConnection = async () => {\n    try {\n      const publicKey = mobileWalletService.getPublicKey();\n      setConnectedWallet(publicKey);\n      \n      if (publicKey) {\n        const balance = await mobileWalletService.getBalance();\n        setUserBalance(balance);\n      }\n    } catch (error) {\n      console.error('Failed to check wallet connection:', error);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const publicKey = await mobileWalletService.connect();\n      if (publicKey) {\n        setConnectedWallet(publicKey);\n        const balance = await mobileWalletService.getBalance();\n        setUserBalance(balance);\n        Alert.alert('Success', `Wallet connected: ${publicKey.toBase58().substring(0, 8)}...`);\n      }\n    } catch (error) {\n      console.error('Wallet connection failed:', error);\n      Alert.alert('Error', 'Failed to connect wallet');\n    }\n  };\n\n  const filterStocks = () => {\n    let filtered = stocks;\n\n    // Filter by category\n    if (selectedCategory !== 'all') {\n      filtered = filtered.filter(stock => stock.category === selectedCategory);\n    }\n\n    // Filter by search query\n    if (searchQuery) {\n      filtered = filtered.filter(stock =>\n        stock.symbol.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        stock.name.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n\n    setFilteredStocks(filtered);\n  };\n\n  const handleStockPurchase = async (stock: Stock) => {\n    if (!connectedWallet) {\n      Alert.alert('Wallet Required', 'Please connect your wallet to make purchases');\n      return;\n    }\n\n    Alert.prompt(\n      'Purchase Stock',\n      `How many shares of ${stock.symbol} would you like to buy?`,\n      [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'Buy',\n          onPress: async (quantity) => {\n            if (quantity && !isNaN(Number(quantity))) {\n              await processPurchase(stock, Number(quantity));\n            }\n          },\n        },\n      ],\n      'plain-text',\n      '1'\n    );\n  };\n\n  const processPurchase = async (stock: Stock, quantity: number) => {\n    try {\n      // Create payment details\n      const payment = solanaPayService.createStockPurchasePayment(\n        stock.symbol,\n        stock.price,\n        quantity\n      );\n\n      // Show payment confirmation\n      Alert.alert(\n        'Confirm Purchase',\n        `Purchase ${quantity} shares of ${stock.symbol}\\n\\n` +\n        `Total: $${payment.totalUSD.toFixed(2)}\\n` +\n        `SOL Amount: ${payment.solAmount.toFixed(4)} SOL\\n` +\n        `Trading Fee: ${payment.feeSOL.toFixed(4)} SOL\\n` +\n        `Total SOL: ${(payment.solAmount + payment.feeSOL).toFixed(4)} SOL`,\n        [\n          { text: 'Cancel', style: 'cancel' },\n          { text: 'Pay with SOL', onPress: () => executePurchase(payment, 'SOL') },\n          { text: 'Pay with BONK', onPress: () => executePurchase(payment, 'BONK') },\n        ]\n      );\n    } catch (error) {\n      console.error('Purchase processing failed:', error);\n      Alert.alert('Error', 'Failed to process purchase');\n    }\n  };\n\n  const executePurchase = async (payment: StockPurchasePayment, paymentMethod: 'SOL' | 'BONK') => {\n    try {\n      if (!connectedWallet) return;\n\n      // Create transaction\n      const transaction = await solanaPayService.createStockPurchaseTransaction(\n        connectedWallet,\n        payment,\n        paymentMethod\n      );\n\n      // Sign and send transaction\n      const signature = await mobileWalletService.signAndSendTransaction(transaction);\n\n      if (signature) {\n        Alert.alert(\n          'Purchase Successful!',\n          `Transaction: ${signature.substring(0, 8)}...\\n\\n` +\n          `You now own ${payment.quantity} shares of ${payment.stockSymbol}`,\n          [{ text: 'OK', onPress: () => refreshBalance() }]\n        );\n      } else {\n        Alert.alert('Error', 'Transaction failed');\n      }\n    } catch (error) {\n      console.error('Purchase execution failed:', error);\n      Alert.alert('Error', 'Failed to execute purchase');\n    }\n  };\n\n  const refreshBalance = async () => {\n    if (connectedWallet) {\n      const balance = await mobileWalletService.getBalance();\n      setUserBalance(balance);\n    }\n  };\n\n  const onRefresh = async () => {\n    setRefreshing(true);\n    await loadStocks();\n    await refreshBalance();\n    setRefreshing(false);\n  };\n\n  const renderStockItem = ({ item }: { item: Stock }) => (\n    <TouchableOpacity\n      style={styles.stockItem}\n      onPress={() => onStockSelect ? onStockSelect(item) : handleStockPurchase(item)}\n    >\n      <View style={styles.stockInfo}>\n        <View style={styles.stockHeader}>\n          <Text style={styles.stockSymbol}>{item.symbol}</Text>\n          <View style={[styles.categoryBadge, styles[`${item.category}Badge`]]}>\n            <Text style={styles.categoryText}>{item.category.toUpperCase()}</Text>\n          </View>\n        </View>\n        <Text style={styles.stockName}>{item.name}</Text>\n        <View style={styles.stockPrice}>\n          <Text style={styles.priceText}>${item.price.toFixed(2)}</Text>\n          <Text style={[styles.changeText, item.change >= 0 ? styles.positive : styles.negative]}>\n            {item.change >= 0 ? '+' : ''}{item.change.toFixed(2)} ({item.changePercent.toFixed(2)}%)\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  const renderCategoryFilter = () => (\n    <View style={styles.categoryFilter}>\n      {['all', 'traditional', 'crypto', 'premium'].map((category) => (\n        <TouchableOpacity\n          key={category}\n          style={[\n            styles.categoryButton,\n            selectedCategory === category && styles.activeCategoryButton\n          ]}\n          onPress={() => setSelectedCategory(category as any)}\n        >\n          <Text style={[\n            styles.categoryButtonText,\n            selectedCategory === category && styles.activeCategoryButtonText\n          ]}>\n            {category.charAt(0).toUpperCase() + category.slice(1)}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#9945FF\" />\n        <Text style={styles.loadingText}>Loading stocks...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {/* Wallet Status */}\n      <View style={styles.walletStatus}>\n        {connectedWallet ? (\n          <View style={styles.walletConnected}>\n            <Text style={styles.walletText}>\n              {connectedWallet.toBase58().substring(0, 8)}...\n            </Text>\n            <Text style={styles.balanceText}>\n              {userBalance.toFixed(4)} SOL\n            </Text>\n          </View>\n        ) : (\n          <TouchableOpacity style={styles.connectButton} onPress={connectWallet}>\n            <Text style={styles.connectButtonText}>Connect Wallet</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n\n      {/* Search Bar */}\n      <View style={styles.searchContainer}>\n        <TextInput\n          style={styles.searchInput}\n          placeholder=\"Search stocks...\"\n          value={searchQuery}\n          onChangeText={setSearchQuery}\n          placeholderTextColor=\"#999\"\n        />\n      </View>\n\n      {/* Category Filter */}\n      {renderCategoryFilter()}\n\n      {/* Stock List */}\n      <FlatList\n        data={filteredStocks}\n        renderItem={renderStockItem}\n        keyExtractor={(item) => item.symbol}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.listContent}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#f8f9fa',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#666',\n  },\n  walletStatus: {\n    padding: 16,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n  },\n  walletConnected: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  walletText: {\n    fontSize: 14,\n    color: '#333',\n    fontWeight: '500',\n  },\n  balanceText: {\n    fontSize: 16,\n    color: '#9945FF',\n    fontWeight: 'bold',\n  },\n  connectButton: {\n    backgroundColor: '#9945FF',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n    alignSelf: 'center',\n  },\n  connectButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  searchContainer: {\n    padding: 16,\n    backgroundColor: '#fff',\n  },\n  searchInput: {\n    height: 44,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    backgroundColor: '#f8f9fa',\n  },\n  categoryFilter: {\n    flexDirection: 'row',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e0e0e0',\n  },\n  categoryButton: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginRight: 8,\n    borderRadius: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  activeCategoryButton: {\n    backgroundColor: '#9945FF',\n  },\n  categoryButtonText: {\n    fontSize: 14,\n    color: '#666',\n    fontWeight: '500',\n  },\n  activeCategoryButtonText: {\n    color: '#fff',\n  },\n  listContent: {\n    paddingVertical: 8,\n  },\n  stockItem: {\n    backgroundColor: '#fff',\n    marginHorizontal: 16,\n    marginVertical: 4,\n    borderRadius: 12,\n    padding: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  stockInfo: {\n    flex: 1,\n  },\n  stockHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  stockSymbol: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  categoryBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 2,\n    borderRadius: 12,\n  },\n  traditionalBadge: {\n    backgroundColor: '#e3f2fd',\n  },\n  cryptoBadge: {\n    backgroundColor: '#f3e5f5',\n  },\n  premiumBadge: {\n    backgroundColor: '#fff3e0',\n  },\n  categoryText: {\n    fontSize: 10,\n    fontWeight: '600',\n    color: '#666',\n  },\n  stockName: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 8,\n  },\n  stockPrice: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  priceText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n  },\n  changeText: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  positive: {\n    color: '#4caf50',\n  },\n  negative: {\n    color: '#f44336',\n  },\n});","import { Keypair, PublicKey } from '@solana/web3.js';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Keychain from 'react-native-keychain';\nimport { getRandomBytes } from 'react-native-get-random-values';\n\nexport interface SeedVaultService {\n  generateSeed(): Promise<Uint8Array>;\n  storeSeed(seed: Uint8Array, alias: string): Promise<boolean>;\n  retrieveSeed(alias: string): Promise<Uint8Array | null>;\n  deleteSeed(alias: string): Promise<boolean>;\n  createKeypairFromSeed(seed: Uint8Array): Keypair;\n  isDeviceSecure(): Promise<boolean>;\n}\n\n/**\n * Seed Vault integration for secure key management\n * This implements the Solana Mobile Stack Seed Vault for secure storage\n */\nexport class MobileSeedVault implements SeedVaultService {\n  private readonly SEED_VAULT_PREFIX = 'sol_stocks_seed_';\n  private readonly KEYCHAIN_SERVICE = 'SolStocksKeychainService';\n\n  /**\n   * Generate cryptographically secure random seed\n   */\n  async generateSeed(): Promise<Uint8Array> {\n    try {\n      // Generate 32 bytes of cryptographically secure random data\n      const seed = new Uint8Array(32);\n      getRandomBytes(seed);\n      return seed;\n    } catch (error) {\n      console.error('Seed generation failed:', error);\n      throw new Error('Failed to generate secure seed');\n    }\n  }\n\n  /**\n   * Store seed securely in device keychain\n   */\n  async storeSeed(seed: Uint8Array, alias: string): Promise<boolean> {\n    try {\n      const seedBase64 = Buffer.from(seed).toString('base64');\n      const keychainKey = `${this.SEED_VAULT_PREFIX}${alias}`;\n      \n      // Store in secure keychain with biometric protection if available\n      const result = await Keychain.setInternetCredentials(\n        keychainKey,\n        alias,\n        seedBase64,\n        {\n          accessControl: Keychain.ACCESS_CONTROL.BIOMETRY_CURRENT_SET_OR_DEVICE_PASSCODE,\n          authenticatePrompt: 'Authenticate to store your Sol Stocks seed',\n          service: this.KEYCHAIN_SERVICE,\n          securityLevel: Keychain.SECURITY_LEVEL.SECURE_HARDWARE,\n        }\n      );\n\n      if (result) {\n        // Store metadata for seed management\n        await AsyncStorage.setItem(`${keychainKey}_metadata`, JSON.stringify({\n          alias,\n          createdAt: Date.now(),\n          lastUsed: Date.now(),\n        }));\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Seed storage failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Retrieve seed from secure storage\n   */\n  async retrieveSeed(alias: string): Promise<Uint8Array | null> {\n    try {\n      const keychainKey = `${this.SEED_VAULT_PREFIX}${alias}`;\n      \n      const credentials = await Keychain.getInternetCredentials(keychainKey, {\n        authenticatePrompt: 'Authenticate to access your Sol Stocks seed',\n        service: this.KEYCHAIN_SERVICE,\n      });\n\n      if (credentials && credentials.password) {\n        // Update last used timestamp\n        await AsyncStorage.setItem(`${keychainKey}_metadata`, JSON.stringify({\n          alias,\n          lastUsed: Date.now(),\n        }));\n\n        const seedBuffer = Buffer.from(credentials.password, 'base64');\n        return new Uint8Array(seedBuffer);\n      }\n\n      return null;\n    } catch (error) {\n      console.error('Seed retrieval failed:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Delete seed from secure storage\n   */\n  async deleteSeed(alias: string): Promise<boolean> {\n    try {\n      const keychainKey = `${this.SEED_VAULT_PREFIX}${alias}`;\n      \n      const result = await Keychain.resetInternetCredentials(keychainKey, {\n        service: this.KEYCHAIN_SERVICE,\n      });\n\n      if (result) {\n        // Remove metadata\n        await AsyncStorage.removeItem(`${keychainKey}_metadata`);\n      }\n\n      return result;\n    } catch (error) {\n      console.error('Seed deletion failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Create Solana keypair from seed\n   */\n  createKeypairFromSeed(seed: Uint8Array): Keypair {\n    try {\n      return Keypair.fromSeed(seed.slice(0, 32));\n    } catch (error) {\n      console.error('Keypair creation failed:', error);\n      throw new Error('Failed to create keypair from seed');\n    }\n  }\n\n  /**\n   * Check if device has secure hardware for key storage\n   */\n  async isDeviceSecure(): Promise<boolean> {\n    try {\n      const securityLevel = await Keychain.getSecurityLevel({\n        service: this.KEYCHAIN_SERVICE,\n      });\n      \n      return securityLevel === Keychain.SECURITY_LEVEL.SECURE_HARDWARE ||\n             securityLevel === Keychain.SECURITY_LEVEL.SECURE_SOFTWARE;\n    } catch (error) {\n      console.error('Device security check failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * List all stored seeds\n   */\n  async listSeeds(): Promise<Array<{ alias: string; createdAt: number; lastUsed: number }>> {\n    try {\n      const keys = await AsyncStorage.getAllKeys();\n      const seedKeys = keys.filter(key => key.includes(`${this.SEED_VAULT_PREFIX}`) && key.includes('_metadata'));\n      \n      const seedInfos = await Promise.all(\n        seedKeys.map(async (key) => {\n          try {\n            const metadata = await AsyncStorage.getItem(key);\n            return metadata ? JSON.parse(metadata) : null;\n          } catch {\n            return null;\n          }\n        })\n      );\n\n      return seedInfos.filter(info => info !== null);\n    } catch (error) {\n      console.error('Seed listing failed:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Generate and store a new seed for the user\n   */\n  async createUserSeed(userAlias: string = 'default'): Promise<{ seed: Uint8Array; keypair: Keypair; publicKey: string } | null> {\n    try {\n      const seed = await this.generateSeed();\n      const keypair = this.createKeypairFromSeed(seed);\n      \n      const stored = await this.storeSeed(seed, userAlias);\n      if (!stored) {\n        throw new Error('Failed to store seed securely');\n      }\n\n      return {\n        seed,\n        keypair,\n        publicKey: keypair.publicKey.toBase58(),\n      };\n    } catch (error) {\n      console.error('User seed creation failed:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Recover user keypair from stored seed\n   */\n  async recoverUserKeypair(userAlias: string = 'default'): Promise<Keypair | null> {\n    try {\n      const seed = await this.retrieveSeed(userAlias);\n      if (!seed) {\n        return null;\n      }\n\n      return this.createKeypairFromSeed(seed);\n    } catch (error) {\n      console.error('User keypair recovery failed:', error);\n      return null;\n    }\n  }\n}\n\n// Export singleton instance\nexport const seedVaultService = new MobileSeedVault();\n\n// Utility functions for common operations\nexport const SeedVaultUtils = {\n  async setupUserWallet(alias: string = 'sol_stocks_user'): Promise<{\n    publicKey: string;\n    isNewWallet: boolean;\n  } | null> {\n    try {\n      // Try to recover existing wallet first\n      let keypair = await seedVaultService.recoverUserKeypair(alias);\n      let isNewWallet = false;\n\n      if (!keypair) {\n        // Create new wallet if none exists\n        const result = await seedVaultService.createUserSeed(alias);\n        if (!result) {\n          return null;\n        }\n        keypair = result.keypair;\n        isNewWallet = true;\n      }\n\n      return {\n        publicKey: keypair.publicKey.toBase58(),\n        isNewWallet,\n      };\n    } catch (error) {\n      console.error('Wallet setup failed:', error);\n      return null;\n    }\n  },\n\n  async signTransaction(transaction: any, userAlias: string = 'sol_stocks_user'): Promise<any | null> {\n    try {\n      const keypair = await seedVaultService.recoverUserKeypair(userAlias);\n      if (!keypair) {\n        throw new Error('No keypair found for user');\n      }\n\n      // Sign the transaction\n      transaction.sign(keypair);\n      return transaction;\n    } catch (error) {\n      console.error('Transaction signing failed:', error);\n      return null;\n    }\n  },\n};","import {\n  transact,\n  Web3MobileWallet,\n} from '@solana-mobile/mobile-wallet-adapter-protocol-web3js';\nimport { \n  Connection, \n  PublicKey, \n  Transaction,\n  SystemProgram,\n  LAMPORTS_PER_SOL\n} from '@solana/web3.js';\nimport { APP_IDENTITY, connection } from './solanaConfig';\n\nexport interface MobileWalletAdapterConfig {\n  cluster: 'devnet' | 'testnet' | 'mainnet-beta';\n  onConnect?: (publicKey: PublicKey) => void;\n  onDisconnect?: () => void;\n  onError?: (error: Error) => void;\n}\n\nexport class MobileWalletService {\n  private connection: Connection;\n  private connectedPublicKey: PublicKey | null = null;\n  private config: MobileWalletAdapterConfig;\n\n  constructor(config: MobileWalletAdapterConfig) {\n    this.connection = connection;\n    this.config = config;\n  }\n\n  /**\n   * Connect to mobile wallet using Mobile Wallet Adapter\n   */\n  async connect(): Promise<PublicKey | null> {\n    try {\n      const authorizationResult = await transact(async (wallet: Web3MobileWallet) => {\n        // Request authorization from the wallet\n        const authorizationResult = await wallet.authorize({\n          cluster: this.config.cluster,\n          identity: APP_IDENTITY,\n        });\n\n        return authorizationResult;\n      });\n\n      if (authorizationResult.accounts.length > 0) {\n        this.connectedPublicKey = authorizationResult.accounts[0].publicKey;\n        this.config.onConnect?.(this.connectedPublicKey);\n        return this.connectedPublicKey;\n      }\n\n      throw new Error('No accounts found');\n    } catch (error) {\n      console.error('Mobile wallet connection failed:', error);\n      this.config.onError?.(error as Error);\n      return null;\n    }\n  }\n\n  /**\n   * Disconnect from mobile wallet\n   */\n  async disconnect(): Promise<void> {\n    try {\n      await transact(async (wallet: Web3MobileWallet) => {\n        await wallet.deauthorize({\n          auth_token: '', // This would be stored from authorization\n        });\n      });\n\n      this.connectedPublicKey = null;\n      this.config.onDisconnect?.();\n    } catch (error) {\n      console.error('Mobile wallet disconnection failed:', error);\n      this.config.onError?.(error as Error);\n    }\n  }\n\n  /**\n   * Sign transaction using mobile wallet\n   */\n  async signTransaction(transaction: Transaction): Promise<Transaction | null> {\n    if (!this.connectedPublicKey) {\n      throw new Error('Wallet not connected');\n    }\n\n    try {\n      const signedTransaction = await transact(async (wallet: Web3MobileWallet) => {\n        // Get latest blockhash\n        const { blockhash } = await this.connection.getLatestBlockhash();\n        transaction.recentBlockhash = blockhash;\n        transaction.feePayer = this.connectedPublicKey!;\n\n        // Sign the transaction\n        const signedTransactions = await wallet.signTransactions({\n          transactions: [transaction],\n        });\n\n        return signedTransactions[0];\n      });\n\n      return signedTransaction;\n    } catch (error) {\n      console.error('Transaction signing failed:', error);\n      this.config.onError?.(error as Error);\n      return null;\n    }\n  }\n\n  /**\n   * Sign and send transaction\n   */\n  async signAndSendTransaction(transaction: Transaction): Promise<string | null> {\n    if (!this.connectedPublicKey) {\n      throw new Error('Wallet not connected');\n    }\n\n    try {\n      const signature = await transact(async (wallet: Web3MobileWallet) => {\n        // Get latest blockhash\n        const { blockhash } = await this.connection.getLatestBlockhash();\n        transaction.recentBlockhash = blockhash;\n        transaction.feePayer = this.connectedPublicKey!;\n\n        // Sign and send the transaction\n        const signedTransactions = await wallet.signAndSendTransactions({\n          transactions: [transaction],\n        });\n\n        return signedTransactions[0];\n      });\n\n      // Wait for confirmation\n      await this.connection.confirmTransaction(signature);\n      return signature;\n    } catch (error) {\n      console.error('Transaction failed:', error);\n      this.config.onError?.(error as Error);\n      return null;\n    }\n  }\n\n  /**\n   * Request airdrop for devnet testing\n   */\n  async requestAirdrop(amount: number = 2): Promise<string | null> {\n    if (!this.connectedPublicKey) {\n      throw new Error('Wallet not connected');\n    }\n\n    try {\n      const signature = await this.connection.requestAirdrop(\n        this.connectedPublicKey,\n        amount * LAMPORTS_PER_SOL\n      );\n\n      await this.connection.confirmTransaction(signature);\n      return signature;\n    } catch (error) {\n      console.error('Airdrop failed:', error);\n      this.config.onError?.(error as Error);\n      return null;\n    }\n  }\n\n  /**\n   * Get SOL balance\n   */\n  async getBalance(): Promise<number> {\n    if (!this.connectedPublicKey) {\n      return 0;\n    }\n\n    try {\n      const balance = await this.connection.getBalance(this.connectedPublicKey);\n      return balance / LAMPORTS_PER_SOL;\n    } catch (error) {\n      console.error('Balance fetch failed:', error);\n      return 0;\n    }\n  }\n\n  /**\n   * Get connected public key\n   */\n  getPublicKey(): PublicKey | null {\n    return this.connectedPublicKey;\n  }\n\n  /**\n   * Check if wallet is connected\n   */\n  isConnected(): boolean {\n    return this.connectedPublicKey !== null;\n  }\n}\n\n// Export singleton instance\nexport const mobileWalletService = new MobileWalletService({\n  cluster: 'devnet',\n  onConnect: (publicKey) => {\n    console.log('Wallet connected:', publicKey.toBase58());\n  },\n  onDisconnect: () => {\n    console.log('Wallet disconnected');\n  },\n  onError: (error) => {\n    console.error('Mobile wallet error:', error);\n  },\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [727], () => (__webpack_require__(1044)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_react","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_interopRequireWildcard","require","_reactNative","_mobileWalletAdapter","_solanaPayIntegration","_jsxRuntime","Dimensions","width","exports","_useState","useState","_useState2","_slicedToArray2","connectedWallet","setConnectedWallet","_useState3","_useState4","holdings","setHoldings","_useState5","totalValue","totalInvested","totalPL","totalPLPercent","solBalance","dayChange","dayChangePercent","_useState6","summary","setSummary","_useState7","_useState8","refreshing","setRefreshing","_useState9","_useState0","setIsLoading","useEffect","checkWalletConnection","loadPortfolioData","_ref","_asyncToGenerator2","publicKey","mobileWalletService","getPublicKey","error","console","apply","arguments","connectWallet","_ref2","connect","Alert","alert","toBase58","substring","_ref3","confirmedPurchases","solanaPayService","getPaymentHistory","filter","p","status","holdingsMap","Map","forEach","purchase","stockSymbol","existing","quantity","totalUSD","symbol","category","holdingsArray","Array","from","values","map","holding","currentPrice","getCurrentStockPrice","avgPrice","unrealizedPL","unrealizedPLPercent","name","getStockName","reduce","sum","getBalance","Math","random","handleSellStock","_ref4","prompt","text","style","onPress","_ref5","isNaN","Number","sellQuantity","processSell","_x2","min","toString","_x","_ref6","sellValue","feeSOL","calculateTradingFee","netSOL","toFixed","executeSell","_x3","_x4","_ref7","onRefresh","_x5","_x6","_x7","_ref8","jsxs","ScrollView","styles","container","refreshControl","jsx","RefreshControl","children","View","summaryContainer","summaryHeader","Text","summaryTitle","dayChangeText","positive","negative","abs","dayChangeLabel","summaryStats","statItem","statLabel","statValue","statPercent","holdingsContainer","holdingsTitle","length","noHoldingsContainer","noHoldingsText","noHoldingsSubtext","TouchableOpacity","holdingItem","holdingHeader","holdingSymbol","holdingName","categoryBadge","categoryText","toUpperCase","holdingDetails","holdingRow","holdingLabel","holdingValue","notConnectedContainer","notConnectedTitle","notConnectedText","connectButton","connectButtonText","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","padding","fontSize","fontWeight","color","marginBottom","textAlign","paddingHorizontal","paddingVertical","borderRadius","margin","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginTop","flexDirection","paddingTop","borderTopWidth","borderTopColor","traditionalBadge","cryptoBadge","premiumBadge","gap","_buffer","_App","_interopRequireDefault","_app","window","addEventListener","removeEventListener","Buffer","AppRegistry","registerComponent","appName","App","_pay","_web","_solanaConfig","_asyncStorage","SolanaPayService","_createClass2","_classCallCheck2","this","connection","key","value","_createStockPurchaseURL","payment","paymentMethod","reference","PublicKey","fill","floor","transferRequest","recipient","PROJECT_TREASURY","amount","solAmount","bonkAmount","splToken","BONK_MINT","undefined","label","message","memo","url","encodeURL","storePaymentReference","timestamp","Date","now","Error","_createStockPurchaseTransaction","userPublicKey","transaction","Transaction","stockTransfer","SystemProgram","transfer","fromPubkey","toPubkey","lamports","LAMPORTS_PER_SOL","add","feeTransfer","totalSOL","blockhash","getLatestBlockhash","recentBlockhash","feePayer","action","includes","feeConfig","FEE_STRUCTURE","feePercent","buyFeePercent","sellFeePercent","max","minFeeSOL","maxFeeSOL","usdAmount","MOCK_SOL_PRICE_USD","stockPrice","_this$convertUSDToTok","convertUSDToTokens","_this$calculateTradin","_confirmPayment","timeout","startTime","signature","findTransactionSignature","validateTransactionSignature","paymentDetails","getPaymentReference","updatePaymentStatus","confirmed","Promise","resolve","setTimeout","_storePaymentReference","paymentData","AsyncStorage","setItem","JSON","stringify","_getPaymentReference","data","getItem","parse","_updatePaymentStatus","existingData","updatedData","confirmedAt","_x8","_x9","_x0","_getPaymentHistory","paymentKeys","getAllKeys","startsWith","payments","all","_x1","sort","a","b","_MobileStockListing","_MobilePortfolio","_seedVault","loadingContainer","loadingText","header","headerTop","appTitle","appSubtitle","opacity","headerActions","walletInfo","walletAddress","fontFamily","airdropButton","airdropButtonText","disconnectButton","disconnectButtonText","tabBar","borderBottomWidth","borderBottomColor","tab","activeTab","tabText","activeTabText","content","setActiveTab","isLoading","initializeApp","setupDeepLinkHandler","seedVaultService","isDeviceSecure","handleDeepLink","log","handleSolanaPayment","Linking","event","getInitialURL","then","paymentUrl","handleWalletConnect","handleWalletDisconnect","disconnect","requestAirdrop","SafeAreaView","StatusBar","barStyle","MobileStockListing","MobilePortfolio","SOLANA_NETWORK","RPC_ENDPOINT","clusterApiUrl","Connection","traditional","crypto","premium","uri","icon","description","image","website","version","onStockSelect","stocks","setStocks","filteredStocks","setFilteredStocks","searchQuery","setSearchQuery","selectedCategory","setSelectedCategory","_useState1","_useState10","_useState11","_useState12","_useState13","_useState14","userBalance","setUserBalance","mockStocks","price","change","changePercent","loadStocks","filterStocks","balance","filtered","stock","toLowerCase","handleStockPurchase","processPurchase","createStockPurchasePayment","executePurchase","createStockPurchaseTransaction","signAndSendTransaction","refreshBalance","_ref9","ActivityIndicator","size","walletStatus","walletConnected","walletText","balanceText","searchContainer","TextInput","searchInput","placeholder","onChangeText","placeholderTextColor","categoryFilter","categoryButton","activeCategoryButton","categoryButtonText","activeCategoryButtonText","charAt","slice","FlatList","renderItem","item","stockItem","stockInfo","stockHeader","stockName","priceText","changeText","keyExtractor","showsVerticalScrollIndicator","contentContainerStyle","listContent","alignSelf","borderWidth","borderColor","marginRight","marginHorizontal","marginVertical","Keychain","_reactNativeGetRandomValues","MobileSeedVault","SEED_VAULT_PREFIX","KEYCHAIN_SERVICE","_generateSeed","seed","Uint8Array","getRandomBytes","_storeSeed","alias","seedBase64","keychainKey","result","setInternetCredentials","accessControl","ACCESS_CONTROL","BIOMETRY_CURRENT_SET_OR_DEVICE_PASSCODE","authenticatePrompt","service","securityLevel","SECURITY_LEVEL","SECURE_HARDWARE","createdAt","lastUsed","_retrieveSeed","credentials","getInternetCredentials","password","seedBuffer","_deleteSeed","resetInternetCredentials","removeItem","Keypair","fromSeed","_isDeviceSecure","getSecurityLevel","SECURE_SOFTWARE","_listSeeds","_this","seedKeys","seedInfos","metadata","info","_createUserSeed","userAlias","generateSeed","keypair","createKeypairFromSeed","storeSeed","_recoverUserKeypair","retrieveSeed","setupUserWallet","recoverUserKeypair","isNewWallet","createUserSeed","signTransaction","sign","_mobileWalletAdapterProtocolWeb3js","MobileWalletService","config","connectedPublicKey","_connect","authorizationResult","transact","wallet","authorize","cluster","identity","APP_IDENTITY","accounts","onConnect","onError","_disconnect","deauthorize","auth_token","onDisconnect","_signTransaction","_this2","signedTransaction","signTransactions","transactions","_signAndSendTransaction","_this3","signAndSendTransactions","confirmTransaction","_requestAirdrop","_getBalance","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","id","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","getter","d","definition","enumerable","g","globalThis","Function","obj","prop","prototype","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}